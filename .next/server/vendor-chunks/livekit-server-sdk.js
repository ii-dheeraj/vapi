"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/livekit-server-sdk";
exports.ids = ["vendor-chunks/livekit-server-sdk"];
exports.modules = {

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js":
/*!*************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/AccessToken.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* binding */ AccessToken),\n/* harmony export */   TokenVerifier: () => (/* binding */ TokenVerifier)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/jwt/sign.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/jwt/verify.js\");\n/* harmony import */ var _grants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./grants.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/grants.js\");\n\n\nconst defaultTTL = `6h`;\nconst defaultClockToleranceSeconds = 10;\nclass AccessToken {\n  /**\n   * Creates a new AccessToken\n   * @param apiKey - API Key, can be set in env LIVEKIT_API_KEY\n   * @param apiSecret - Secret, can be set in env LIVEKIT_API_SECRET\n   */\n  constructor(apiKey, apiSecret, options) {\n    if (!apiKey) {\n      apiKey = process.env.LIVEKIT_API_KEY;\n    }\n    if (!apiSecret) {\n      apiSecret = process.env.LIVEKIT_API_SECRET;\n    }\n    if (!apiKey || !apiSecret) {\n      throw Error(\"api-key and api-secret must be set\");\n    } else if (typeof document !== \"undefined\") {\n      console.error(\n        \"You should not include your API secret in your web client bundle.\\n\\nYour web client should request a token from your backend server which should then use the API secret to generate a token. See https://docs.livekit.io/client/connect/\"\n      );\n    }\n    this.apiKey = apiKey;\n    this.apiSecret = apiSecret;\n    this.grants = {};\n    this.identity = options == null ? void 0 : options.identity;\n    this.ttl = (options == null ? void 0 : options.ttl) || defaultTTL;\n    if (typeof this.ttl === \"number\") {\n      this.ttl = `${this.ttl}s`;\n    }\n    if (options == null ? void 0 : options.metadata) {\n      this.metadata = options.metadata;\n    }\n    if (options == null ? void 0 : options.attributes) {\n      this.attributes = options.attributes;\n    }\n    if (options == null ? void 0 : options.name) {\n      this.name = options.name;\n    }\n  }\n  /**\n   * Adds a video grant to this token.\n   * @param grant -\n   */\n  addGrant(grant) {\n    this.grants.video = { ...this.grants.video ?? {}, ...grant };\n  }\n  /**\n   * Adds an inference grant to this token.\n   * @param grant -\n   */\n  addInferenceGrant(grant) {\n    this.grants.inference = { ...this.grants.inference ?? {}, ...grant };\n  }\n  /**\n   * Adds a SIP grant to this token.\n   * @param grant -\n   */\n  addSIPGrant(grant) {\n    this.grants.sip = { ...this.grants.sip ?? {}, ...grant };\n  }\n  get name() {\n    return this.grants.name;\n  }\n  set name(name) {\n    this.grants.name = name;\n  }\n  get metadata() {\n    return this.grants.metadata;\n  }\n  /**\n   * Set metadata to be passed to the Participant, used only when joining the room\n   */\n  set metadata(md) {\n    this.grants.metadata = md;\n  }\n  get attributes() {\n    return this.grants.attributes;\n  }\n  set attributes(attrs) {\n    this.grants.attributes = attrs;\n  }\n  get kind() {\n    return this.grants.kind;\n  }\n  set kind(kind) {\n    this.grants.kind = kind;\n  }\n  get sha256() {\n    return this.grants.sha256;\n  }\n  set sha256(sha) {\n    this.grants.sha256 = sha;\n  }\n  get roomPreset() {\n    return this.grants.roomPreset;\n  }\n  set roomPreset(preset) {\n    this.grants.roomPreset = preset;\n  }\n  get roomConfig() {\n    return this.grants.roomConfig;\n  }\n  set roomConfig(config) {\n    this.grants.roomConfig = config;\n  }\n  /**\n   * @returns JWT encoded token\n   */\n  async toJwt() {\n    var _a;\n    const secret = new TextEncoder().encode(this.apiSecret);\n    const jwt = new jose__WEBPACK_IMPORTED_MODULE_1__.SignJWT((0,_grants_js__WEBPACK_IMPORTED_MODULE_0__.claimsToJwtPayload)(this.grants)).setProtectedHeader({ alg: \"HS256\" }).setIssuer(this.apiKey).setExpirationTime(this.ttl).setNotBefore(0);\n    if (this.identity) {\n      jwt.setSubject(this.identity);\n    } else if ((_a = this.grants.video) == null ? void 0 : _a.roomJoin) {\n      throw Error(\"identity is required for join but not set\");\n    }\n    return jwt.sign(secret);\n  }\n}\nclass TokenVerifier {\n  constructor(apiKey, apiSecret) {\n    this.apiKey = apiKey;\n    this.apiSecret = apiSecret;\n  }\n  async verify(token, clockTolerance = defaultClockToleranceSeconds) {\n    const secret = new TextEncoder().encode(this.apiSecret);\n    const { payload } = await jose__WEBPACK_IMPORTED_MODULE_2__.jwtVerify(token, secret, {\n      issuer: this.apiKey,\n      clockTolerance\n    });\n    if (!payload) {\n      throw Error(\"invalid token\");\n    }\n    return payload;\n  }\n}\n\n//# sourceMappingURL=AccessToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvQWNjZXNzVG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNkI7QUFDb0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixTQUFTO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDBCQUEwQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsOEJBQThCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix3QkFBd0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseUNBQVksQ0FBQyw4REFBa0Isb0NBQW9DLGNBQWM7QUFDckc7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFVBQVUsUUFBUSwyQ0FBYztBQUM1QztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFx2YXBpXFxub2RlX21vZHVsZXNcXGxpdmVraXQtc2VydmVyLXNka1xcZGlzdFxcQWNjZXNzVG9rZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgam9zZSBmcm9tIFwiam9zZVwiO1xuaW1wb3J0IHsgY2xhaW1zVG9Kd3RQYXlsb2FkIH0gZnJvbSBcIi4vZ3JhbnRzLmpzXCI7XG5jb25zdCBkZWZhdWx0VFRMID0gYDZoYDtcbmNvbnN0IGRlZmF1bHRDbG9ja1RvbGVyYW5jZVNlY29uZHMgPSAxMDtcbmNsYXNzIEFjY2Vzc1Rva2VuIHtcbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBuZXcgQWNjZXNzVG9rZW5cbiAgICogQHBhcmFtIGFwaUtleSAtIEFQSSBLZXksIGNhbiBiZSBzZXQgaW4gZW52IExJVkVLSVRfQVBJX0tFWVxuICAgKiBAcGFyYW0gYXBpU2VjcmV0IC0gU2VjcmV0LCBjYW4gYmUgc2V0IGluIGVudiBMSVZFS0lUX0FQSV9TRUNSRVRcbiAgICovXG4gIGNvbnN0cnVjdG9yKGFwaUtleSwgYXBpU2VjcmV0LCBvcHRpb25zKSB7XG4gICAgaWYgKCFhcGlLZXkpIHtcbiAgICAgIGFwaUtleSA9IHByb2Nlc3MuZW52LkxJVkVLSVRfQVBJX0tFWTtcbiAgICB9XG4gICAgaWYgKCFhcGlTZWNyZXQpIHtcbiAgICAgIGFwaVNlY3JldCA9IHByb2Nlc3MuZW52LkxJVkVLSVRfQVBJX1NFQ1JFVDtcbiAgICB9XG4gICAgaWYgKCFhcGlLZXkgfHwgIWFwaVNlY3JldCkge1xuICAgICAgdGhyb3cgRXJyb3IoXCJhcGkta2V5IGFuZCBhcGktc2VjcmV0IG11c3QgYmUgc2V0XCIpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICBcIllvdSBzaG91bGQgbm90IGluY2x1ZGUgeW91ciBBUEkgc2VjcmV0IGluIHlvdXIgd2ViIGNsaWVudCBidW5kbGUuXFxuXFxuWW91ciB3ZWIgY2xpZW50IHNob3VsZCByZXF1ZXN0IGEgdG9rZW4gZnJvbSB5b3VyIGJhY2tlbmQgc2VydmVyIHdoaWNoIHNob3VsZCB0aGVuIHVzZSB0aGUgQVBJIHNlY3JldCB0byBnZW5lcmF0ZSBhIHRva2VuLiBTZWUgaHR0cHM6Ly9kb2NzLmxpdmVraXQuaW8vY2xpZW50L2Nvbm5lY3QvXCJcbiAgICAgICk7XG4gICAgfVxuICAgIHRoaXMuYXBpS2V5ID0gYXBpS2V5O1xuICAgIHRoaXMuYXBpU2VjcmV0ID0gYXBpU2VjcmV0O1xuICAgIHRoaXMuZ3JhbnRzID0ge307XG4gICAgdGhpcy5pZGVudGl0eSA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuaWRlbnRpdHk7XG4gICAgdGhpcy50dGwgPSAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy50dGwpIHx8IGRlZmF1bHRUVEw7XG4gICAgaWYgKHR5cGVvZiB0aGlzLnR0bCA9PT0gXCJudW1iZXJcIikge1xuICAgICAgdGhpcy50dGwgPSBgJHt0aGlzLnR0bH1zYDtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubWV0YWRhdGEpIHtcbiAgICAgIHRoaXMubWV0YWRhdGEgPSBvcHRpb25zLm1ldGFkYXRhO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5hdHRyaWJ1dGVzKSB7XG4gICAgICB0aGlzLmF0dHJpYnV0ZXMgPSBvcHRpb25zLmF0dHJpYnV0ZXM7XG4gICAgfVxuICAgIGlmIChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLm5hbWUpIHtcbiAgICAgIHRoaXMubmFtZSA9IG9wdGlvbnMubmFtZTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIEFkZHMgYSB2aWRlbyBncmFudCB0byB0aGlzIHRva2VuLlxuICAgKiBAcGFyYW0gZ3JhbnQgLVxuICAgKi9cbiAgYWRkR3JhbnQoZ3JhbnQpIHtcbiAgICB0aGlzLmdyYW50cy52aWRlbyA9IHsgLi4udGhpcy5ncmFudHMudmlkZW8gPz8ge30sIC4uLmdyYW50IH07XG4gIH1cbiAgLyoqXG4gICAqIEFkZHMgYW4gaW5mZXJlbmNlIGdyYW50IHRvIHRoaXMgdG9rZW4uXG4gICAqIEBwYXJhbSBncmFudCAtXG4gICAqL1xuICBhZGRJbmZlcmVuY2VHcmFudChncmFudCkge1xuICAgIHRoaXMuZ3JhbnRzLmluZmVyZW5jZSA9IHsgLi4udGhpcy5ncmFudHMuaW5mZXJlbmNlID8/IHt9LCAuLi5ncmFudCB9O1xuICB9XG4gIC8qKlxuICAgKiBBZGRzIGEgU0lQIGdyYW50IHRvIHRoaXMgdG9rZW4uXG4gICAqIEBwYXJhbSBncmFudCAtXG4gICAqL1xuICBhZGRTSVBHcmFudChncmFudCkge1xuICAgIHRoaXMuZ3JhbnRzLnNpcCA9IHsgLi4udGhpcy5ncmFudHMuc2lwID8/IHt9LCAuLi5ncmFudCB9O1xuICB9XG4gIGdldCBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLmdyYW50cy5uYW1lO1xuICB9XG4gIHNldCBuYW1lKG5hbWUpIHtcbiAgICB0aGlzLmdyYW50cy5uYW1lID0gbmFtZTtcbiAgfVxuICBnZXQgbWV0YWRhdGEoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ3JhbnRzLm1ldGFkYXRhO1xuICB9XG4gIC8qKlxuICAgKiBTZXQgbWV0YWRhdGEgdG8gYmUgcGFzc2VkIHRvIHRoZSBQYXJ0aWNpcGFudCwgdXNlZCBvbmx5IHdoZW4gam9pbmluZyB0aGUgcm9vbVxuICAgKi9cbiAgc2V0IG1ldGFkYXRhKG1kKSB7XG4gICAgdGhpcy5ncmFudHMubWV0YWRhdGEgPSBtZDtcbiAgfVxuICBnZXQgYXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gdGhpcy5ncmFudHMuYXR0cmlidXRlcztcbiAgfVxuICBzZXQgYXR0cmlidXRlcyhhdHRycykge1xuICAgIHRoaXMuZ3JhbnRzLmF0dHJpYnV0ZXMgPSBhdHRycztcbiAgfVxuICBnZXQga2luZCgpIHtcbiAgICByZXR1cm4gdGhpcy5ncmFudHMua2luZDtcbiAgfVxuICBzZXQga2luZChraW5kKSB7XG4gICAgdGhpcy5ncmFudHMua2luZCA9IGtpbmQ7XG4gIH1cbiAgZ2V0IHNoYTI1NigpIHtcbiAgICByZXR1cm4gdGhpcy5ncmFudHMuc2hhMjU2O1xuICB9XG4gIHNldCBzaGEyNTYoc2hhKSB7XG4gICAgdGhpcy5ncmFudHMuc2hhMjU2ID0gc2hhO1xuICB9XG4gIGdldCByb29tUHJlc2V0KCkge1xuICAgIHJldHVybiB0aGlzLmdyYW50cy5yb29tUHJlc2V0O1xuICB9XG4gIHNldCByb29tUHJlc2V0KHByZXNldCkge1xuICAgIHRoaXMuZ3JhbnRzLnJvb21QcmVzZXQgPSBwcmVzZXQ7XG4gIH1cbiAgZ2V0IHJvb21Db25maWcoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ3JhbnRzLnJvb21Db25maWc7XG4gIH1cbiAgc2V0IHJvb21Db25maWcoY29uZmlnKSB7XG4gICAgdGhpcy5ncmFudHMucm9vbUNvbmZpZyA9IGNvbmZpZztcbiAgfVxuICAvKipcbiAgICogQHJldHVybnMgSldUIGVuY29kZWQgdG9rZW5cbiAgICovXG4gIGFzeW5jIHRvSnd0KCkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBzZWNyZXQgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodGhpcy5hcGlTZWNyZXQpO1xuICAgIGNvbnN0IGp3dCA9IG5ldyBqb3NlLlNpZ25KV1QoY2xhaW1zVG9Kd3RQYXlsb2FkKHRoaXMuZ3JhbnRzKSkuc2V0UHJvdGVjdGVkSGVhZGVyKHsgYWxnOiBcIkhTMjU2XCIgfSkuc2V0SXNzdWVyKHRoaXMuYXBpS2V5KS5zZXRFeHBpcmF0aW9uVGltZSh0aGlzLnR0bCkuc2V0Tm90QmVmb3JlKDApO1xuICAgIGlmICh0aGlzLmlkZW50aXR5KSB7XG4gICAgICBqd3Quc2V0U3ViamVjdCh0aGlzLmlkZW50aXR5KTtcbiAgICB9IGVsc2UgaWYgKChfYSA9IHRoaXMuZ3JhbnRzLnZpZGVvKSA9PSBudWxsID8gdm9pZCAwIDogX2Eucm9vbUpvaW4pIHtcbiAgICAgIHRocm93IEVycm9yKFwiaWRlbnRpdHkgaXMgcmVxdWlyZWQgZm9yIGpvaW4gYnV0IG5vdCBzZXRcIik7XG4gICAgfVxuICAgIHJldHVybiBqd3Quc2lnbihzZWNyZXQpO1xuICB9XG59XG5jbGFzcyBUb2tlblZlcmlmaWVyIHtcbiAgY29uc3RydWN0b3IoYXBpS2V5LCBhcGlTZWNyZXQpIHtcbiAgICB0aGlzLmFwaUtleSA9IGFwaUtleTtcbiAgICB0aGlzLmFwaVNlY3JldCA9IGFwaVNlY3JldDtcbiAgfVxuICBhc3luYyB2ZXJpZnkodG9rZW4sIGNsb2NrVG9sZXJhbmNlID0gZGVmYXVsdENsb2NrVG9sZXJhbmNlU2Vjb25kcykge1xuICAgIGNvbnN0IHNlY3JldCA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZSh0aGlzLmFwaVNlY3JldCk7XG4gICAgY29uc3QgeyBwYXlsb2FkIH0gPSBhd2FpdCBqb3NlLmp3dFZlcmlmeSh0b2tlbiwgc2VjcmV0LCB7XG4gICAgICBpc3N1ZXI6IHRoaXMuYXBpS2V5LFxuICAgICAgY2xvY2tUb2xlcmFuY2VcbiAgICB9KTtcbiAgICBpZiAoIXBheWxvYWQpIHtcbiAgICAgIHRocm93IEVycm9yKFwiaW52YWxpZCB0b2tlblwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHBheWxvYWQ7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIEFjY2Vzc1Rva2VuLFxuICBUb2tlblZlcmlmaWVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWNjZXNzVG9rZW4uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/AgentDispatchClient.js":
/*!*********************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/AgentDispatchClient.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentDispatchClient: () => (/* binding */ AgentDispatchClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = \"AgentDispatchService\";\nclass AgentDispatchClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__.ServiceBase {\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host, apiKey, secret) {\n    super(apiKey, secret);\n    this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n  }\n  /**\n   * Create an explicit dispatch for an agent to join a room. To use explicit\n   * dispatch, your agent must be registered with an `agentName`.\n   * @param roomName - name of the room to dispatch to\n   * @param agentName - name of the agent to dispatch\n   * @param options - optional metadata to send along with the dispatch\n   * @returns the dispatch that was created\n   */\n  async createDispatch(roomName, agentName, options) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateAgentDispatchRequest({\n      room: roomName,\n      agentName,\n      metadata: options == null ? void 0 : options.metadata\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateDispatch\",\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AgentDispatch.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Delete an explicit dispatch for an agent in a room.\n   * @param dispatchId - id of the dispatch to delete\n   * @param roomName - name of the room the dispatch is for\n   */\n  async deleteDispatch(dispatchId, roomName) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteAgentDispatchRequest({\n      dispatchId,\n      room: roomName\n    }).toJson();\n    await this.rpc.request(\n      svc,\n      \"DeleteDispatch\",\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName })\n    );\n  }\n  /**\n   * Get an Agent dispatch by ID\n   * @param dispatchId - id of the dispatch to get\n   * @param roomName - name of the room the dispatch is for\n   * @returns the dispatch that was found, or undefined if not found\n   */\n  async getDispatch(dispatchId, roomName) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListAgentDispatchRequest({\n      dispatchId,\n      room: roomName\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"ListDispatch\",\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName })\n    );\n    const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListAgentDispatchResponse.fromJson(data, { ignoreUnknownFields: true });\n    if (res.agentDispatches.length === 0) {\n      return void 0;\n    }\n    return res.agentDispatches[0];\n  }\n  /**\n   * List all agent dispatches for a room\n   * @param roomName - name of the room to list dispatches for\n   * @returns the list of dispatches\n   */\n  async listDispatch(roomName) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListAgentDispatchRequest({\n      room: roomName\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"ListDispatch\",\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName })\n    );\n    const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListAgentDispatchResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.agentDispatches;\n  }\n}\n\n//# sourceMappingURL=AgentDispatchClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvQWdlbnREaXNwYXRjaENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBTTJCO0FBQ29CO0FBQ1U7QUFDekQ7QUFDQSxrQ0FBa0Msd0RBQVc7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0RBQVEsT0FBTyx3REFBYztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix5RUFBMEI7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGlDQUFpQztBQUMvRDtBQUNBLFdBQVcsNERBQWEsa0JBQWtCLDJCQUEyQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix5RUFBMEI7QUFDOUM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixpQ0FBaUM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVFQUF3QjtBQUM1QztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGlDQUFpQztBQUMvRDtBQUNBLGdCQUFnQix3RUFBeUIsa0JBQWtCLDJCQUEyQjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVFQUF3QjtBQUM1QztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixpQ0FBaUM7QUFDL0Q7QUFDQSxnQkFBZ0Isd0VBQXlCLGtCQUFrQiwyQkFBMkI7QUFDdEY7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXHZhcGlcXG5vZGVfbW9kdWxlc1xcbGl2ZWtpdC1zZXJ2ZXItc2RrXFxkaXN0XFxBZ2VudERpc3BhdGNoQ2xpZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFnZW50RGlzcGF0Y2gsXG4gIENyZWF0ZUFnZW50RGlzcGF0Y2hSZXF1ZXN0LFxuICBEZWxldGVBZ2VudERpc3BhdGNoUmVxdWVzdCxcbiAgTGlzdEFnZW50RGlzcGF0Y2hSZXF1ZXN0LFxuICBMaXN0QWdlbnREaXNwYXRjaFJlc3BvbnNlXG59IGZyb20gXCJAbGl2ZWtpdC9wcm90b2NvbFwiO1xuaW1wb3J0IHsgU2VydmljZUJhc2UgfSBmcm9tIFwiLi9TZXJ2aWNlQmFzZS5qc1wiO1xuaW1wb3J0IHsgVHdpcnBScGMsIGxpdmVraXRQYWNrYWdlIH0gZnJvbSBcIi4vVHdpcnBSUEMuanNcIjtcbmNvbnN0IHN2YyA9IFwiQWdlbnREaXNwYXRjaFNlcnZpY2VcIjtcbmNsYXNzIEFnZW50RGlzcGF0Y2hDbGllbnQgZXh0ZW5kcyBTZXJ2aWNlQmFzZSB7XG4gIC8qKlxuICAgKiBAcGFyYW0gaG9zdCAtIGhvc3RuYW1lIGluY2x1ZGluZyBwcm90b2NvbC4gaS5lLiAnaHR0cHM6Ly88cHJvamVjdD4ubGl2ZWtpdC5jbG91ZCdcbiAgICogQHBhcmFtIGFwaUtleSAtIEFQSSBLZXksIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9LRVlcbiAgICogQHBhcmFtIHNlY3JldCAtIEFQSSBTZWNyZXQsIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9TRUNSRVRcbiAgICovXG4gIGNvbnN0cnVjdG9yKGhvc3QsIGFwaUtleSwgc2VjcmV0KSB7XG4gICAgc3VwZXIoYXBpS2V5LCBzZWNyZXQpO1xuICAgIHRoaXMucnBjID0gbmV3IFR3aXJwUnBjKGhvc3QsIGxpdmVraXRQYWNrYWdlKTtcbiAgfVxuICAvKipcbiAgICogQ3JlYXRlIGFuIGV4cGxpY2l0IGRpc3BhdGNoIGZvciBhbiBhZ2VudCB0byBqb2luIGEgcm9vbS4gVG8gdXNlIGV4cGxpY2l0XG4gICAqIGRpc3BhdGNoLCB5b3VyIGFnZW50IG11c3QgYmUgcmVnaXN0ZXJlZCB3aXRoIGFuIGBhZ2VudE5hbWVgLlxuICAgKiBAcGFyYW0gcm9vbU5hbWUgLSBuYW1lIG9mIHRoZSByb29tIHRvIGRpc3BhdGNoIHRvXG4gICAqIEBwYXJhbSBhZ2VudE5hbWUgLSBuYW1lIG9mIHRoZSBhZ2VudCB0byBkaXNwYXRjaFxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIG9wdGlvbmFsIG1ldGFkYXRhIHRvIHNlbmQgYWxvbmcgd2l0aCB0aGUgZGlzcGF0Y2hcbiAgICogQHJldHVybnMgdGhlIGRpc3BhdGNoIHRoYXQgd2FzIGNyZWF0ZWRcbiAgICovXG4gIGFzeW5jIGNyZWF0ZURpc3BhdGNoKHJvb21OYW1lLCBhZ2VudE5hbWUsIG9wdGlvbnMpIHtcbiAgICBjb25zdCByZXEgPSBuZXcgQ3JlYXRlQWdlbnREaXNwYXRjaFJlcXVlc3Qoe1xuICAgICAgcm9vbTogcm9vbU5hbWUsXG4gICAgICBhZ2VudE5hbWUsXG4gICAgICBtZXRhZGF0YTogb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5tZXRhZGF0YVxuICAgIH0pLnRvSnNvbigpO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KFxuICAgICAgc3ZjLFxuICAgICAgXCJDcmVhdGVEaXNwYXRjaFwiLFxuICAgICAgcmVxLFxuICAgICAgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHsgcm9vbUFkbWluOiB0cnVlLCByb29tOiByb29tTmFtZSB9KVxuICAgICk7XG4gICAgcmV0dXJuIEFnZW50RGlzcGF0Y2guZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pO1xuICB9XG4gIC8qKlxuICAgKiBEZWxldGUgYW4gZXhwbGljaXQgZGlzcGF0Y2ggZm9yIGFuIGFnZW50IGluIGEgcm9vbS5cbiAgICogQHBhcmFtIGRpc3BhdGNoSWQgLSBpZCBvZiB0aGUgZGlzcGF0Y2ggdG8gZGVsZXRlXG4gICAqIEBwYXJhbSByb29tTmFtZSAtIG5hbWUgb2YgdGhlIHJvb20gdGhlIGRpc3BhdGNoIGlzIGZvclxuICAgKi9cbiAgYXN5bmMgZGVsZXRlRGlzcGF0Y2goZGlzcGF0Y2hJZCwgcm9vbU5hbWUpIHtcbiAgICBjb25zdCByZXEgPSBuZXcgRGVsZXRlQWdlbnREaXNwYXRjaFJlcXVlc3Qoe1xuICAgICAgZGlzcGF0Y2hJZCxcbiAgICAgIHJvb206IHJvb21OYW1lXG4gICAgfSkudG9Kc29uKCk7XG4gICAgYXdhaXQgdGhpcy5ycGMucmVxdWVzdChcbiAgICAgIHN2YyxcbiAgICAgIFwiRGVsZXRlRGlzcGF0Y2hcIixcbiAgICAgIHJlcSxcbiAgICAgIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IHJvb21BZG1pbjogdHJ1ZSwgcm9vbTogcm9vbU5hbWUgfSlcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgYW4gQWdlbnQgZGlzcGF0Y2ggYnkgSURcbiAgICogQHBhcmFtIGRpc3BhdGNoSWQgLSBpZCBvZiB0aGUgZGlzcGF0Y2ggdG8gZ2V0XG4gICAqIEBwYXJhbSByb29tTmFtZSAtIG5hbWUgb2YgdGhlIHJvb20gdGhlIGRpc3BhdGNoIGlzIGZvclxuICAgKiBAcmV0dXJucyB0aGUgZGlzcGF0Y2ggdGhhdCB3YXMgZm91bmQsIG9yIHVuZGVmaW5lZCBpZiBub3QgZm91bmRcbiAgICovXG4gIGFzeW5jIGdldERpc3BhdGNoKGRpc3BhdGNoSWQsIHJvb21OYW1lKSB7XG4gICAgY29uc3QgcmVxID0gbmV3IExpc3RBZ2VudERpc3BhdGNoUmVxdWVzdCh7XG4gICAgICBkaXNwYXRjaElkLFxuICAgICAgcm9vbTogcm9vbU5hbWVcbiAgICB9KS50b0pzb24oKTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChcbiAgICAgIHN2YyxcbiAgICAgIFwiTGlzdERpc3BhdGNoXCIsXG4gICAgICByZXEsXG4gICAgICBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyByb29tQWRtaW46IHRydWUsIHJvb206IHJvb21OYW1lIH0pXG4gICAgKTtcbiAgICBjb25zdCByZXMgPSBMaXN0QWdlbnREaXNwYXRjaFJlc3BvbnNlLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgICBpZiAocmVzLmFnZW50RGlzcGF0Y2hlcy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIHJldHVybiByZXMuYWdlbnREaXNwYXRjaGVzWzBdO1xuICB9XG4gIC8qKlxuICAgKiBMaXN0IGFsbCBhZ2VudCBkaXNwYXRjaGVzIGZvciBhIHJvb21cbiAgICogQHBhcmFtIHJvb21OYW1lIC0gbmFtZSBvZiB0aGUgcm9vbSB0byBsaXN0IGRpc3BhdGNoZXMgZm9yXG4gICAqIEByZXR1cm5zIHRoZSBsaXN0IG9mIGRpc3BhdGNoZXNcbiAgICovXG4gIGFzeW5jIGxpc3REaXNwYXRjaChyb29tTmFtZSkge1xuICAgIGNvbnN0IHJlcSA9IG5ldyBMaXN0QWdlbnREaXNwYXRjaFJlcXVlc3Qoe1xuICAgICAgcm9vbTogcm9vbU5hbWVcbiAgICB9KS50b0pzb24oKTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChcbiAgICAgIHN2YyxcbiAgICAgIFwiTGlzdERpc3BhdGNoXCIsXG4gICAgICByZXEsXG4gICAgICBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyByb29tQWRtaW46IHRydWUsIHJvb206IHJvb21OYW1lIH0pXG4gICAgKTtcbiAgICBjb25zdCByZXMgPSBMaXN0QWdlbnREaXNwYXRjaFJlc3BvbnNlLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgICByZXR1cm4gcmVzLmFnZW50RGlzcGF0Y2hlcztcbiAgfVxufVxuZXhwb3J0IHtcbiAgQWdlbnREaXNwYXRjaENsaWVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFnZW50RGlzcGF0Y2hDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/AgentDispatchClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/EgressClient.js":
/*!**************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/EgressClient.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EgressClient: () => (/* binding */ EgressClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = \"Egress\";\nclass EgressClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__.ServiceBase {\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host, apiKey, secret) {\n    super(apiKey, secret);\n    this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n  }\n  async startRoomCompositeEgress(roomName, output, optsOrLayout, options, audioOnly, videoOnly, customBaseUrl, audioMixing) {\n    let layout;\n    let webhooks;\n    if (optsOrLayout !== void 0) {\n      if (typeof optsOrLayout === \"string\") {\n        layout = optsOrLayout;\n      } else {\n        const opts = optsOrLayout;\n        layout = opts.layout;\n        options = opts.encodingOptions;\n        audioOnly = opts.audioOnly;\n        videoOnly = opts.videoOnly;\n        customBaseUrl = opts.customBaseUrl;\n        audioMixing = opts.audioMixing;\n        webhooks = opts.webhooks;\n      }\n    }\n    layout ??= \"\";\n    audioOnly ??= false;\n    videoOnly ??= false;\n    customBaseUrl ??= \"\";\n    audioMixing ??= _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AudioMixing.DEFAULT_MIXING;\n    const {\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    } = this.getOutputParams(output, options);\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomCompositeEgressRequest({\n      roomName,\n      layout,\n      audioOnly,\n      audioMixing,\n      videoOnly,\n      customBaseUrl,\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n      webhooks\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"StartRoomCompositeEgress\",\n      req,\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param url - url\n   * @param output - file or stream output\n   * @param opts - WebOptions\n   */\n  async startWebEgress(url, output, opts) {\n    const audioOnly = (opts == null ? void 0 : opts.audioOnly) || false;\n    const videoOnly = (opts == null ? void 0 : opts.videoOnly) || false;\n    const awaitStartSignal = (opts == null ? void 0 : opts.awaitStartSignal) || false;\n    const webhooks = (opts == null ? void 0 : opts.webhooks) || [];\n    const {\n      output: legacyOutput,\n      options,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    } = this.getOutputParams(output, opts == null ? void 0 : opts.encodingOptions);\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebEgressRequest({\n      url,\n      audioOnly,\n      videoOnly,\n      awaitStartSignal,\n      output: legacyOutput,\n      options,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n      webhooks\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"StartWebEgress\",\n      req,\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Export a participant's audio and video tracks,\n   *\n   * @param roomName - room name\n   * @param output - one or more outputs\n   * @param opts - ParticipantEgressOptions\n   */\n  async startParticipantEgress(roomName, identity, output, opts) {\n    const webhooks = (opts == null ? void 0 : opts.webhooks) || [];\n    const { options, fileOutputs, streamOutputs, segmentOutputs, imageOutputs } = this.getOutputParams(output, opts == null ? void 0 : opts.encodingOptions);\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantEgressRequest({\n      roomName,\n      identity,\n      screenShare: (opts == null ? void 0 : opts.screenShare) ?? false,\n      options,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n      webhooks\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"StartParticipantEgress\",\n      req,\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  async startTrackCompositeEgress(roomName, output, optsOrAudioTrackId, videoTrackId, options) {\n    let audioTrackId;\n    let webhooks;\n    if (optsOrAudioTrackId !== void 0) {\n      if (typeof optsOrAudioTrackId === \"string\") {\n        audioTrackId = optsOrAudioTrackId;\n      } else {\n        const opts = optsOrAudioTrackId;\n        audioTrackId = opts.audioTrackId;\n        videoTrackId = opts.videoTrackId;\n        options = opts.encodingOptions;\n        webhooks = opts.webhooks;\n      }\n    }\n    audioTrackId ??= \"\";\n    videoTrackId ??= \"\";\n    const {\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    } = this.getOutputParams(output, options);\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackCompositeEgressRequest({\n      roomName,\n      audioTrackId,\n      videoTrackId,\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n      webhooks\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"StartTrackCompositeEgress\",\n      req,\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isEncodedOutputs(output) {\n    return output.file !== void 0 || output.stream !== void 0 || output.segments !== void 0 || output.images !== void 0;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isEncodedFileOutput(output) {\n    return output.filepath !== void 0 || output.fileType !== void 0;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isSegmentedFileOutput(output) {\n    return output.filenamePrefix !== void 0 || output.playlistName !== void 0 || output.filenameSuffix !== void 0;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isStreamOutput(output) {\n    return output.protocol !== void 0 || output.urls !== void 0;\n  }\n  getOutputParams(output, opts) {\n    let file;\n    let fileOutputs;\n    let stream;\n    let streamOutputs;\n    let segments;\n    let segmentOutputs;\n    let imageOutputs;\n    if (this.isEncodedOutputs(output)) {\n      if (output.file !== void 0) {\n        fileOutputs = [output.file];\n      }\n      if (output.stream !== void 0) {\n        streamOutputs = [output.stream];\n      }\n      if (output.segments !== void 0) {\n        segmentOutputs = [output.segments];\n      }\n      if (output.images !== void 0) {\n        imageOutputs = [output.images];\n      }\n    } else if (this.isEncodedFileOutput(output)) {\n      file = output;\n      fileOutputs = [file];\n    } else if (this.isSegmentedFileOutput(output)) {\n      segments = output;\n      segmentOutputs = [segments];\n    } else if (this.isStreamOutput(output)) {\n      stream = output;\n      streamOutputs = [stream];\n    }\n    let legacyOutput;\n    if (file) {\n      legacyOutput = {\n        case: \"file\",\n        value: file\n      };\n    } else if (stream) {\n      legacyOutput = {\n        case: \"stream\",\n        value: stream\n      };\n    } else if (segments) {\n      legacyOutput = {\n        case: \"segments\",\n        value: segments\n      };\n    }\n    let egressOptions;\n    if (opts) {\n      if (typeof opts === \"number\") {\n        egressOptions = {\n          case: \"preset\",\n          value: opts\n        };\n      } else {\n        egressOptions = {\n          case: \"advanced\",\n          value: opts\n        };\n      }\n    }\n    return {\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs\n    };\n  }\n  /**\n   * @param roomName - room name\n   * @param output - file or websocket output\n   * @param trackId - track Id\n   */\n  async startTrackEgress(roomName, output, trackId, webhooks) {\n    let legacyOutput;\n    if (typeof output === \"string\") {\n      legacyOutput = {\n        case: \"websocketUrl\",\n        value: output\n      };\n    } else {\n      legacyOutput = {\n        case: \"file\",\n        value: output\n      };\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackEgressRequest({\n      roomName,\n      trackId,\n      output: legacyOutput,\n      webhooks\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"StartTrackEgress\",\n      req,\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param egressId -\n   * @param layout -\n   */\n  async updateLayout(egressId, layout) {\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateLayout\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateLayoutRequest({ egressId, layout }).toJson(),\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param egressId -\n   * @param addOutputUrls -\n   * @param removeOutputUrls -\n   */\n  async updateStream(egressId, addOutputUrls, removeOutputUrls) {\n    addOutputUrls ??= [];\n    removeOutputUrls ??= [];\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateStream\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateStreamRequest({ egressId, addOutputUrls, removeOutputUrls }).toJson(),\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param roomName - list egress for one room only\n   */\n  async listEgress(options) {\n    let req = {};\n    if (typeof options === \"string\") {\n      req.roomName = options;\n    } else if (options !== void 0) {\n      req = options;\n    }\n    const data = await this.rpc.request(\n      svc,\n      \"ListEgress\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListEgressRequest(req).toJson(),\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListEgressResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  /**\n   * @param egressId -\n   */\n  async stopEgress(egressId) {\n    const data = await this.rpc.request(\n      svc,\n      \"StopEgress\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StopEgressRequest({ egressId }).toJson(),\n      await this.authHeader({ roomRecord: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n}\n\n//# sourceMappingURL=EgressClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/EgressClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/IngressClient.js":
/*!***************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/IngressClient.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IngressClient: () => (/* binding */ IngressClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = \"Ingress\";\nclass IngressClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__.ServiceBase {\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host, apiKey, secret) {\n    super(apiKey, secret);\n    this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n  }\n  /**\n   * @param inputType - protocol for the ingress\n   * @param opts - CreateIngressOptions\n   */\n  async createIngress(inputType, opts) {\n    let name = \"\";\n    let participantName = \"\";\n    let participantIdentity = \"\";\n    let bypassTranscoding = false;\n    let url = \"\";\n    if (opts == null) {\n      throw new Error(\"options dictionary is required\");\n    }\n    const roomName = opts.roomName;\n    const enableTranscoding = opts.enableTranscoding;\n    const audio = opts.audio;\n    const video = opts.video;\n    const participantMetadata = opts.participantMetadata;\n    name = opts.name || \"\";\n    participantName = opts.participantName || \"\";\n    participantIdentity = opts.participantIdentity || \"\";\n    bypassTranscoding = opts.bypassTranscoding || false;\n    url = opts.url || \"\";\n    if (typeof roomName == \"undefined\") {\n      throw new Error(\"required roomName option not provided\");\n    }\n    if (participantIdentity == \"\") {\n      throw new Error(\"required participantIdentity option not provided\");\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateIngressRequest({\n      inputType,\n      name,\n      roomName,\n      participantIdentity,\n      participantMetadata,\n      participantName,\n      bypassTranscoding,\n      enableTranscoding,\n      url,\n      audio,\n      video\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateIngress\",\n      req,\n      await this.authHeader({ ingressAdmin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param ingressId - ID of the ingress to update\n   * @param opts - UpdateIngressOptions\n   */\n  async updateIngress(ingressId, opts) {\n    const name = opts.name || \"\";\n    const roomName = opts.roomName || \"\";\n    const participantName = opts.participantName || \"\";\n    const participantIdentity = opts.participantIdentity || \"\";\n    const { participantMetadata } = opts;\n    const { audio, video, bypassTranscoding, enableTranscoding } = opts;\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateIngressRequest({\n      ingressId,\n      name,\n      roomName,\n      participantIdentity,\n      participantName,\n      participantMetadata,\n      bypassTranscoding,\n      enableTranscoding,\n      audio,\n      video\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateIngress\",\n      req,\n      await this.authHeader({ ingressAdmin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @param arg - list room name or options\n   */\n  async listIngress(arg) {\n    let req = {};\n    if (typeof arg === \"string\") {\n      req.roomName = arg;\n    } else if (arg) {\n      req = arg;\n    }\n    const data = await this.rpc.request(\n      svc,\n      \"ListIngress\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListIngressRequest(req).toJson(),\n      await this.authHeader({ ingressAdmin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListIngressResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  /**\n   * @param ingressId - ingress to delete\n   */\n  async deleteIngress(ingressId) {\n    const data = await this.rpc.request(\n      svc,\n      \"DeleteIngress\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteIngressRequest({ ingressId }).toJson(),\n      await this.authHeader({ ingressAdmin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n}\n\n//# sourceMappingURL=IngressClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvSW5ncmVzc0NsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBTzJCO0FBQ29CO0FBQ1U7QUFDekQ7QUFDQSw0QkFBNEIsd0RBQVc7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0RBQVEsT0FBTyx3REFBYztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUVBQW9CO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsb0JBQW9CO0FBQ2xEO0FBQ0EsV0FBVywwREFBVyxrQkFBa0IsMkJBQTJCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxzQkFBc0I7QUFDbEMsWUFBWSxxREFBcUQ7QUFDakUsb0JBQW9CLG1FQUFvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixvQkFBb0I7QUFDbEQ7QUFDQSxXQUFXLDBEQUFXLGtCQUFrQiwyQkFBMkI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxpRUFBa0I7QUFDNUIsOEJBQThCLG9CQUFvQjtBQUNsRDtBQUNBLFdBQVcsa0VBQW1CLGtCQUFrQiwyQkFBMkI7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsbUVBQW9CLEdBQUcsV0FBVztBQUM1Qyw4QkFBOEIsb0JBQW9CO0FBQ2xEO0FBQ0EsV0FBVywwREFBVyxrQkFBa0IsMkJBQTJCO0FBQ25FO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJDOlxcdmFwaVxcbm9kZV9tb2R1bGVzXFxsaXZla2l0LXNlcnZlci1zZGtcXGRpc3RcXEluZ3Jlc3NDbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ3JlYXRlSW5ncmVzc1JlcXVlc3QsXG4gIERlbGV0ZUluZ3Jlc3NSZXF1ZXN0LFxuICBJbmdyZXNzSW5mbyxcbiAgTGlzdEluZ3Jlc3NSZXF1ZXN0LFxuICBMaXN0SW5ncmVzc1Jlc3BvbnNlLFxuICBVcGRhdGVJbmdyZXNzUmVxdWVzdFxufSBmcm9tIFwiQGxpdmVraXQvcHJvdG9jb2xcIjtcbmltcG9ydCB7IFNlcnZpY2VCYXNlIH0gZnJvbSBcIi4vU2VydmljZUJhc2UuanNcIjtcbmltcG9ydCB7IFR3aXJwUnBjLCBsaXZla2l0UGFja2FnZSB9IGZyb20gXCIuL1R3aXJwUlBDLmpzXCI7XG5jb25zdCBzdmMgPSBcIkluZ3Jlc3NcIjtcbmNsYXNzIEluZ3Jlc3NDbGllbnQgZXh0ZW5kcyBTZXJ2aWNlQmFzZSB7XG4gIC8qKlxuICAgKiBAcGFyYW0gaG9zdCAtIGhvc3RuYW1lIGluY2x1ZGluZyBwcm90b2NvbC4gaS5lLiAnaHR0cHM6Ly88cHJvamVjdD4ubGl2ZWtpdC5jbG91ZCdcbiAgICogQHBhcmFtIGFwaUtleSAtIEFQSSBLZXksIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9LRVlcbiAgICogQHBhcmFtIHNlY3JldCAtIEFQSSBTZWNyZXQsIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9TRUNSRVRcbiAgICovXG4gIGNvbnN0cnVjdG9yKGhvc3QsIGFwaUtleSwgc2VjcmV0KSB7XG4gICAgc3VwZXIoYXBpS2V5LCBzZWNyZXQpO1xuICAgIHRoaXMucnBjID0gbmV3IFR3aXJwUnBjKGhvc3QsIGxpdmVraXRQYWNrYWdlKTtcbiAgfVxuICAvKipcbiAgICogQHBhcmFtIGlucHV0VHlwZSAtIHByb3RvY29sIGZvciB0aGUgaW5ncmVzc1xuICAgKiBAcGFyYW0gb3B0cyAtIENyZWF0ZUluZ3Jlc3NPcHRpb25zXG4gICAqL1xuICBhc3luYyBjcmVhdGVJbmdyZXNzKGlucHV0VHlwZSwgb3B0cykge1xuICAgIGxldCBuYW1lID0gXCJcIjtcbiAgICBsZXQgcGFydGljaXBhbnROYW1lID0gXCJcIjtcbiAgICBsZXQgcGFydGljaXBhbnRJZGVudGl0eSA9IFwiXCI7XG4gICAgbGV0IGJ5cGFzc1RyYW5zY29kaW5nID0gZmFsc2U7XG4gICAgbGV0IHVybCA9IFwiXCI7XG4gICAgaWYgKG9wdHMgPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwib3B0aW9ucyBkaWN0aW9uYXJ5IGlzIHJlcXVpcmVkXCIpO1xuICAgIH1cbiAgICBjb25zdCByb29tTmFtZSA9IG9wdHMucm9vbU5hbWU7XG4gICAgY29uc3QgZW5hYmxlVHJhbnNjb2RpbmcgPSBvcHRzLmVuYWJsZVRyYW5zY29kaW5nO1xuICAgIGNvbnN0IGF1ZGlvID0gb3B0cy5hdWRpbztcbiAgICBjb25zdCB2aWRlbyA9IG9wdHMudmlkZW87XG4gICAgY29uc3QgcGFydGljaXBhbnRNZXRhZGF0YSA9IG9wdHMucGFydGljaXBhbnRNZXRhZGF0YTtcbiAgICBuYW1lID0gb3B0cy5uYW1lIHx8IFwiXCI7XG4gICAgcGFydGljaXBhbnROYW1lID0gb3B0cy5wYXJ0aWNpcGFudE5hbWUgfHwgXCJcIjtcbiAgICBwYXJ0aWNpcGFudElkZW50aXR5ID0gb3B0cy5wYXJ0aWNpcGFudElkZW50aXR5IHx8IFwiXCI7XG4gICAgYnlwYXNzVHJhbnNjb2RpbmcgPSBvcHRzLmJ5cGFzc1RyYW5zY29kaW5nIHx8IGZhbHNlO1xuICAgIHVybCA9IG9wdHMudXJsIHx8IFwiXCI7XG4gICAgaWYgKHR5cGVvZiByb29tTmFtZSA9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJyZXF1aXJlZCByb29tTmFtZSBvcHRpb24gbm90IHByb3ZpZGVkXCIpO1xuICAgIH1cbiAgICBpZiAocGFydGljaXBhbnRJZGVudGl0eSA9PSBcIlwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJyZXF1aXJlZCBwYXJ0aWNpcGFudElkZW50aXR5IG9wdGlvbiBub3QgcHJvdmlkZWRcIik7XG4gICAgfVxuICAgIGNvbnN0IHJlcSA9IG5ldyBDcmVhdGVJbmdyZXNzUmVxdWVzdCh7XG4gICAgICBpbnB1dFR5cGUsXG4gICAgICBuYW1lLFxuICAgICAgcm9vbU5hbWUsXG4gICAgICBwYXJ0aWNpcGFudElkZW50aXR5LFxuICAgICAgcGFydGljaXBhbnRNZXRhZGF0YSxcbiAgICAgIHBhcnRpY2lwYW50TmFtZSxcbiAgICAgIGJ5cGFzc1RyYW5zY29kaW5nLFxuICAgICAgZW5hYmxlVHJhbnNjb2RpbmcsXG4gICAgICB1cmwsXG4gICAgICBhdWRpbyxcbiAgICAgIHZpZGVvXG4gICAgfSkudG9Kc29uKCk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3QoXG4gICAgICBzdmMsXG4gICAgICBcIkNyZWF0ZUluZ3Jlc3NcIixcbiAgICAgIHJlcSxcbiAgICAgIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IGluZ3Jlc3NBZG1pbjogdHJ1ZSB9KVxuICAgICk7XG4gICAgcmV0dXJuIEluZ3Jlc3NJbmZvLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgfVxuICAvKipcbiAgICogQHBhcmFtIGluZ3Jlc3NJZCAtIElEIG9mIHRoZSBpbmdyZXNzIHRvIHVwZGF0ZVxuICAgKiBAcGFyYW0gb3B0cyAtIFVwZGF0ZUluZ3Jlc3NPcHRpb25zXG4gICAqL1xuICBhc3luYyB1cGRhdGVJbmdyZXNzKGluZ3Jlc3NJZCwgb3B0cykge1xuICAgIGNvbnN0IG5hbWUgPSBvcHRzLm5hbWUgfHwgXCJcIjtcbiAgICBjb25zdCByb29tTmFtZSA9IG9wdHMucm9vbU5hbWUgfHwgXCJcIjtcbiAgICBjb25zdCBwYXJ0aWNpcGFudE5hbWUgPSBvcHRzLnBhcnRpY2lwYW50TmFtZSB8fCBcIlwiO1xuICAgIGNvbnN0IHBhcnRpY2lwYW50SWRlbnRpdHkgPSBvcHRzLnBhcnRpY2lwYW50SWRlbnRpdHkgfHwgXCJcIjtcbiAgICBjb25zdCB7IHBhcnRpY2lwYW50TWV0YWRhdGEgfSA9IG9wdHM7XG4gICAgY29uc3QgeyBhdWRpbywgdmlkZW8sIGJ5cGFzc1RyYW5zY29kaW5nLCBlbmFibGVUcmFuc2NvZGluZyB9ID0gb3B0cztcbiAgICBjb25zdCByZXEgPSBuZXcgVXBkYXRlSW5ncmVzc1JlcXVlc3Qoe1xuICAgICAgaW5ncmVzc0lkLFxuICAgICAgbmFtZSxcbiAgICAgIHJvb21OYW1lLFxuICAgICAgcGFydGljaXBhbnRJZGVudGl0eSxcbiAgICAgIHBhcnRpY2lwYW50TmFtZSxcbiAgICAgIHBhcnRpY2lwYW50TWV0YWRhdGEsXG4gICAgICBieXBhc3NUcmFuc2NvZGluZyxcbiAgICAgIGVuYWJsZVRyYW5zY29kaW5nLFxuICAgICAgYXVkaW8sXG4gICAgICB2aWRlb1xuICAgIH0pLnRvSnNvbigpO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KFxuICAgICAgc3ZjLFxuICAgICAgXCJVcGRhdGVJbmdyZXNzXCIsXG4gICAgICByZXEsXG4gICAgICBhd2FpdCB0aGlzLmF1dGhIZWFkZXIoeyBpbmdyZXNzQWRtaW46IHRydWUgfSlcbiAgICApO1xuICAgIHJldHVybiBJbmdyZXNzSW5mby5mcm9tSnNvbihkYXRhLCB7IGlnbm9yZVVua25vd25GaWVsZHM6IHRydWUgfSk7XG4gIH1cbiAgLyoqXG4gICAqIEBwYXJhbSBhcmcgLSBsaXN0IHJvb20gbmFtZSBvciBvcHRpb25zXG4gICAqL1xuICBhc3luYyBsaXN0SW5ncmVzcyhhcmcpIHtcbiAgICBsZXQgcmVxID0ge307XG4gICAgaWYgKHR5cGVvZiBhcmcgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHJlcS5yb29tTmFtZSA9IGFyZztcbiAgICB9IGVsc2UgaWYgKGFyZykge1xuICAgICAgcmVxID0gYXJnO1xuICAgIH1cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChcbiAgICAgIHN2YyxcbiAgICAgIFwiTGlzdEluZ3Jlc3NcIixcbiAgICAgIG5ldyBMaXN0SW5ncmVzc1JlcXVlc3QocmVxKS50b0pzb24oKSxcbiAgICAgIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IGluZ3Jlc3NBZG1pbjogdHJ1ZSB9KVxuICAgICk7XG4gICAgcmV0dXJuIExpc3RJbmdyZXNzUmVzcG9uc2UuZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pLml0ZW1zID8/IFtdO1xuICB9XG4gIC8qKlxuICAgKiBAcGFyYW0gaW5ncmVzc0lkIC0gaW5ncmVzcyB0byBkZWxldGVcbiAgICovXG4gIGFzeW5jIGRlbGV0ZUluZ3Jlc3MoaW5ncmVzc0lkKSB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3QoXG4gICAgICBzdmMsXG4gICAgICBcIkRlbGV0ZUluZ3Jlc3NcIixcbiAgICAgIG5ldyBEZWxldGVJbmdyZXNzUmVxdWVzdCh7IGluZ3Jlc3NJZCB9KS50b0pzb24oKSxcbiAgICAgIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IGluZ3Jlc3NBZG1pbjogdHJ1ZSB9KVxuICAgICk7XG4gICAgcmV0dXJuIEluZ3Jlc3NJbmZvLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgSW5ncmVzc0NsaWVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUluZ3Jlc3NDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/IngressClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/RoomServiceClient.js":
/*!*******************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/RoomServiceClient.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RoomServiceClient: () => (/* binding */ RoomServiceClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n/* harmony import */ var _crypto_uuid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./crypto/uuid.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/crypto/uuid.js\");\n\n\n\n\nconst svc = \"RoomService\";\nclass RoomServiceClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__.ServiceBase {\n  /**\n   *\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host, apiKey, secret) {\n    super(apiKey, secret);\n    this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n  }\n  /**\n   * Creates a new room. Explicit room creation is not required, since rooms will\n   * be automatically created when the first participant joins. This method can be\n   * used to customize room settings.\n   * @param options -\n   */\n  async createRoom(options) {\n    const data = await this.rpc.request(\n      svc,\n      \"CreateRoom\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateRoomRequest(options).toJson(),\n      await this.authHeader({ roomCreate: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * List active rooms\n   * @param names - when undefined or empty, list all rooms.\n   *                otherwise returns rooms with matching names\n   * @returns\n   */\n  async listRooms(names) {\n    const data = await this.rpc.request(\n      svc,\n      \"ListRooms\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListRoomsRequest({ names: names ?? [] }).toJson(),\n      await this.authHeader({ roomList: true })\n    );\n    const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListRoomsResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.rooms ?? [];\n  }\n  async deleteRoom(room) {\n    await this.rpc.request(\n      svc,\n      \"DeleteRoom\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteRoomRequest({ room }).toJson(),\n      await this.authHeader({ roomCreate: true })\n    );\n  }\n  /**\n   * Update metadata of a room\n   * @param room - name of the room\n   * @param metadata - the new metadata for the room\n   */\n  async updateRoomMetadata(room, metadata) {\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateRoomMetadata\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateRoomMetadataRequest({ room, metadata }).toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * List participants in a room\n   * @param room - name of the room\n   */\n  async listParticipants(room) {\n    const data = await this.rpc.request(\n      svc,\n      \"ListParticipants\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListParticipantsRequest({ room }).toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n    const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListParticipantsResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.participants ?? [];\n  }\n  /**\n   * Get information on a specific participant, including the tracks that participant\n   * has published\n   * @param room - name of the room\n   * @param identity - identity of the participant to return\n   */\n  async getParticipant(room, identity) {\n    const data = await this.rpc.request(\n      svc,\n      \"GetParticipant\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomParticipantIdentity({ room, identity }).toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Removes a participant in the room. This will disconnect the participant\n   * and will emit a Disconnected event for that participant.\n   * Even after being removed, the participant can still re-join the room.\n   * @param room -\n   * @param identity -\n   */\n  async removeParticipant(room, identity) {\n    await this.rpc.request(\n      svc,\n      \"RemoveParticipant\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomParticipantIdentity({ room, identity }).toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n  }\n  /**\n   * Forwards a participant's track to another room. This will create a\n   * participant to join the destination room that has same information\n   * with the source participant except the kind to be `Forwarded`. All\n   * changes to the source participant will be reflected to the forwarded\n   * participant. When the source participant disconnects or the\n   * `RemoveParticipant` method is called in the destination room, the\n   * forwarding will be stopped.\n   * @param room -\n   * @param identity -\n   * @param destinationRoom - the room to forward the participant to\n   */\n  async forwardParticipant(room, identity, destinationRoom) {\n    await this.rpc.request(\n      svc,\n      \"ForwardParticipant\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ForwardParticipantRequest({ room, identity, destinationRoom }).toJson(),\n      await this.authHeader({ roomAdmin: true, room, destinationRoom })\n    );\n  }\n  /**\n   * Move a connected participant to a different room. Requires `roomAdmin` and `destinationRoom`.\n   * The participant will be removed from the current room and added to the destination room.\n   * From the other observers' perspective, the participant would've disconnected from the previous room and joined the new one.\n   * @param room -\n   * @param identity -\n   * @param destinationRoom - the room to move the participant to\n   */\n  async moveParticipant(room, identity, destinationRoom) {\n    await this.rpc.request(\n      svc,\n      \"MoveParticipant\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.MoveParticipantRequest({ room, identity, destinationRoom }).toJson(),\n      await this.authHeader({ roomAdmin: true, room, destinationRoom })\n    );\n  }\n  /**\n   * Mutes a track that the participant has published.\n   * @param room -\n   * @param identity -\n   * @param trackSid - sid of the track to be muted\n   * @param muted - true to mute, false to unmute\n   */\n  async mutePublishedTrack(room, identity, trackSid, muted) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.MuteRoomTrackRequest({\n      room,\n      identity,\n      trackSid,\n      muted\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"MutePublishedTrack\",\n      req,\n      await this.authHeader({ roomAdmin: true, room })\n    );\n    const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.MuteRoomTrackResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.track;\n  }\n  async updateParticipant(room, identity, metadataOrOptions, maybePermission, maybeName) {\n    const hasOptions = typeof metadataOrOptions === \"object\";\n    const metadata = hasOptions ? metadataOrOptions == null ? void 0 : metadataOrOptions.metadata : metadataOrOptions;\n    const permission = hasOptions ? metadataOrOptions.permission : maybePermission;\n    const name = hasOptions ? metadataOrOptions.name : maybeName;\n    const attributes = hasOptions ? metadataOrOptions.attributes : {};\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateParticipantRequest({\n      room,\n      identity,\n      attributes,\n      metadata,\n      name\n    });\n    if (permission) {\n      req.permission = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantPermission(permission);\n    }\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateParticipant\",\n      req.toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Updates a participant's subscription to tracks\n   * @param room -\n   * @param identity -\n   * @param trackSids -\n   * @param subscribe - true to subscribe, false to unsubscribe\n   */\n  async updateSubscriptions(room, identity, trackSids, subscribe) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateSubscriptionsRequest({\n      room,\n      identity,\n      trackSids,\n      subscribe,\n      participantTracks: []\n    }).toJson();\n    await this.rpc.request(\n      svc,\n      \"UpdateSubscriptions\",\n      req,\n      await this.authHeader({ roomAdmin: true, room })\n    );\n  }\n  async sendData(room, data, kind, options = {}) {\n    const destinationSids = Array.isArray(options) ? options : options.destinationSids;\n    const topic = Array.isArray(options) ? void 0 : options.topic;\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SendDataRequest({\n      room,\n      data,\n      kind,\n      destinationSids: destinationSids ?? [],\n      topic\n    });\n    if (!Array.isArray(options) && options.destinationIdentities) {\n      req.destinationIdentities = options.destinationIdentities;\n    }\n    req.nonce = await (0,_crypto_uuid_js__WEBPACK_IMPORTED_MODULE_3__.getRandomBytes)(16);\n    await this.rpc.request(\n      svc,\n      \"SendData\",\n      req.toJson(),\n      await this.authHeader({ roomAdmin: true, room })\n    );\n  }\n}\n\n//# sourceMappingURL=RoomServiceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/RoomServiceClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js":
/*!*************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/ServiceBase.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServiceBase: () => (/* binding */ ServiceBase)\n/* harmony export */ });\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\");\n\nclass ServiceBase {\n  /**\n   * @param apiKey - API Key.\n   * @param secret - API Secret.\n   * @param ttl - token TTL\n   */\n  constructor(apiKey, secret, ttl) {\n    this.apiKey = apiKey;\n    this.secret = secret;\n    this.ttl = ttl || \"10m\";\n  }\n  async authHeader(grant, sip) {\n    const at = new _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__.AccessToken(this.apiKey, this.secret, { ttl: this.ttl });\n    if (grant) {\n      at.addGrant(grant);\n    }\n    if (sip) {\n      at.addSIPGrant(sip);\n    }\n    return {\n      Authorization: `Bearer ${await at.toJwt()}`\n    };\n  }\n}\n\n//# sourceMappingURL=ServiceBase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvU2VydmljZUJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdEQUFXLDZCQUE2QixlQUFlO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGlCQUFpQjtBQUNoRDtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJDOlxcdmFwaVxcbm9kZV9tb2R1bGVzXFxsaXZla2l0LXNlcnZlci1zZGtcXGRpc3RcXFNlcnZpY2VCYXNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjY2Vzc1Rva2VuIH0gZnJvbSBcIi4vQWNjZXNzVG9rZW4uanNcIjtcbmNsYXNzIFNlcnZpY2VCYXNlIHtcbiAgLyoqXG4gICAqIEBwYXJhbSBhcGlLZXkgLSBBUEkgS2V5LlxuICAgKiBAcGFyYW0gc2VjcmV0IC0gQVBJIFNlY3JldC5cbiAgICogQHBhcmFtIHR0bCAtIHRva2VuIFRUTFxuICAgKi9cbiAgY29uc3RydWN0b3IoYXBpS2V5LCBzZWNyZXQsIHR0bCkge1xuICAgIHRoaXMuYXBpS2V5ID0gYXBpS2V5O1xuICAgIHRoaXMuc2VjcmV0ID0gc2VjcmV0O1xuICAgIHRoaXMudHRsID0gdHRsIHx8IFwiMTBtXCI7XG4gIH1cbiAgYXN5bmMgYXV0aEhlYWRlcihncmFudCwgc2lwKSB7XG4gICAgY29uc3QgYXQgPSBuZXcgQWNjZXNzVG9rZW4odGhpcy5hcGlLZXksIHRoaXMuc2VjcmV0LCB7IHR0bDogdGhpcy50dGwgfSk7XG4gICAgaWYgKGdyYW50KSB7XG4gICAgICBhdC5hZGRHcmFudChncmFudCk7XG4gICAgfVxuICAgIGlmIChzaXApIHtcbiAgICAgIGF0LmFkZFNJUEdyYW50KHNpcCk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YXdhaXQgYXQudG9Kd3QoKX1gXG4gICAgfTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgU2VydmljZUJhc2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJ2aWNlQmFzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/SipClient.js":
/*!***********************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/SipClient.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SipClient: () => (/* binding */ SipClient)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/duration_pb.js\");\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\n\nconst svc = \"SIP\";\nclass SipClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__.ServiceBase {\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host, apiKey, secret) {\n    super(apiKey, secret);\n    this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n  }\n  /**\n   * @param number - phone number of the trunk\n   * @param opts - CreateSipTrunkOptions\n   * @deprecated use `createSipInboundTrunk` or `createSipOutboundTrunk`\n   */\n  async createSipTrunk(number, opts) {\n    let inboundAddresses;\n    let inboundNumbers;\n    let inboundUsername = \"\";\n    let inboundPassword = \"\";\n    let outboundAddress = \"\";\n    let outboundUsername = \"\";\n    let outboundPassword = \"\";\n    let name = \"\";\n    let metadata = \"\";\n    if (opts !== void 0) {\n      inboundAddresses = opts.inbound_addresses;\n      inboundNumbers = opts.inbound_numbers;\n      inboundUsername = opts.inbound_username || \"\";\n      inboundPassword = opts.inbound_password || \"\";\n      outboundAddress = opts.outbound_address || \"\";\n      outboundUsername = opts.outbound_username || \"\";\n      outboundPassword = opts.outbound_password || \"\";\n      name = opts.name || \"\";\n      metadata = opts.metadata || \"\";\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPTrunkRequest({\n      name,\n      metadata,\n      inboundAddresses,\n      inboundNumbers,\n      inboundUsername,\n      inboundPassword,\n      outboundNumber: number,\n      outboundAddress,\n      outboundUsername,\n      outboundPassword\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateSIPTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Create a new SIP inbound trunk.\n   *\n   * @param name - human-readable name of the trunk\n   * @param numbers - phone numbers of the trunk\n   * @param opts - CreateSipTrunkOptions\n   * @returns Created SIP inbound trunk\n   */\n  async createSipInboundTrunk(name, numbers, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPInboundTrunkRequest({\n      trunk: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPInboundTrunkInfo({\n        name,\n        numbers,\n        metadata: opts == null ? void 0 : opts.metadata,\n        allowedAddresses: opts.allowedAddresses ?? opts.allowed_addresses,\n        allowedNumbers: opts.allowedNumbers ?? opts.allowed_numbers,\n        authUsername: opts.authUsername ?? opts.auth_username,\n        authPassword: opts.authPassword ?? opts.auth_password,\n        headers: opts.headers,\n        headersToAttributes: opts.headersToAttributes,\n        includeHeaders: opts.includeHeaders,\n        krispEnabled: opts.krispEnabled\n      })\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateSIPInboundTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPInboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Create a new SIP outbound trunk.\n   *\n   * @param name - human-readable name of the trunk\n   * @param address - hostname and port of the SIP server to dial\n   * @param numbers - phone numbers of the trunk\n   * @param opts - CreateSipTrunkOptions\n   * @returns Created SIP outbound trunk\n   */\n  async createSipOutboundTrunk(name, address, numbers, opts) {\n    if (opts === void 0) {\n      opts = {\n        transport: _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTransport.SIP_TRANSPORT_AUTO\n      };\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPOutboundTrunkRequest({\n      trunk: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPOutboundTrunkInfo({\n        name,\n        address,\n        numbers,\n        metadata: opts.metadata,\n        transport: opts.transport,\n        authUsername: opts.authUsername ?? opts.auth_username,\n        authPassword: opts.authPassword ?? opts.auth_password,\n        headers: opts.headers,\n        headersToAttributes: opts.headersToAttributes,\n        includeHeaders: opts.includeHeaders,\n        destinationCountry: opts.destinationCountry\n      })\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateSIPOutboundTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPOutboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * @deprecated use `listSipInboundTrunk` or `listSipOutboundTrunk`\n   */\n  async listSipTrunk() {\n    const req = {};\n    const data = await this.rpc.request(\n      svc,\n      \"ListSIPTrunk\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPTrunkRequest(req).toJson(),\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  /**\n   * List SIP inbound trunks with optional filtering.\n   *\n   * @param list - Request with optional filtering parameters\n   * @returns Response containing list of SIP inbound trunks\n   */\n  async listSipInboundTrunk(list = {}) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPInboundTrunkRequest(list).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"ListSIPInboundTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPInboundTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  /**\n   * List SIP outbound trunks with optional filtering.\n   *\n   * @param list - Request with optional filtering parameters\n   * @returns Response containing list of SIP outbound trunks\n   */\n  async listSipOutboundTrunk(list = {}) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPOutboundTrunkRequest(list).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"ListSIPOutboundTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPOutboundTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  /**\n   * Delete a SIP trunk.\n   *\n   * @param sipTrunkId - ID of the SIP trunk to delete\n   * @returns Deleted trunk information\n   */\n  async deleteSipTrunk(sipTrunkId) {\n    const data = await this.rpc.request(\n      svc,\n      \"DeleteSIPTrunk\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteSIPTrunkRequest({ sipTrunkId }).toJson(),\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Create a new SIP dispatch rule.\n   *\n   * @param rule - SIP dispatch rule to create\n   * @param opts - CreateSipDispatchRuleOptions\n   * @returns Created SIP dispatch rule\n   */\n  async createSipDispatchRule(rule, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let ruleProto = void 0;\n    if (rule.type == \"direct\") {\n      ruleProto = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRule({\n        rule: {\n          case: \"dispatchRuleDirect\",\n          value: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleDirect({\n            roomName: rule.roomName,\n            pin: rule.pin || \"\"\n          })\n        }\n      });\n    } else if (rule.type == \"individual\") {\n      ruleProto = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRule({\n        rule: {\n          case: \"dispatchRuleIndividual\",\n          value: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleIndividual({\n            roomPrefix: rule.roomPrefix,\n            pin: rule.pin || \"\"\n          })\n        }\n      });\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPDispatchRuleRequest({\n      rule: ruleProto,\n      trunkIds: opts.trunkIds,\n      hidePhoneNumber: opts.hidePhoneNumber,\n      name: opts.name,\n      metadata: opts.metadata,\n      attributes: opts.attributes,\n      roomPreset: opts.roomPreset,\n      roomConfig: opts.roomConfig\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateSIPDispatchRule\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Updates an existing SIP dispatch rule by replacing it entirely.\n   *\n   * @param sipDispatchRuleId - ID of the SIP dispatch rule to update\n   * @param rule - new SIP dispatch rule\n   * @returns Updated SIP dispatch rule\n   */\n  async updateSipDispatchRule(sipDispatchRuleId, rule) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateSIPDispatchRuleRequest({\n      sipDispatchRuleId,\n      action: {\n        case: \"replace\",\n        value: rule\n      }\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateSIPDispatchRule\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Updates specific fields of an existing SIP dispatch rule.\n   * Only provided fields will be updated.\n   *\n   * @param sipDispatchRuleId - ID of the SIP dispatch rule to update\n   * @param fields - Fields of the dispatch rule to update\n   * @returns Updated SIP dispatch rule\n   */\n  async updateSipDispatchRuleFields(sipDispatchRuleId, fields = {}) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateSIPDispatchRuleRequest({\n      sipDispatchRuleId,\n      action: {\n        case: \"update\",\n        value: fields\n      }\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateSIPDispatchRule\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Updates an existing SIP inbound trunk by replacing it entirely.\n   *\n   * @param sipTrunkId - ID of the SIP inbound trunk to update\n   * @param trunk - SIP inbound trunk to update with\n   * @returns Updated SIP inbound trunk\n   */\n  async updateSipInboundTrunk(sipTrunkId, trunk) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateSIPInboundTrunkRequest({\n      sipTrunkId,\n      action: {\n        case: \"replace\",\n        value: trunk\n      }\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateSIPInboundTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPInboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Updates specific fields of an existing SIP inbound trunk.\n   * Only provided fields will be updated.\n   *\n   * @param sipTrunkId - ID of the SIP inbound trunk to update\n   * @param fields - Fields of the inbound trunk to update\n   * @returns Updated SIP inbound trunk\n   */\n  async updateSipInboundTrunkFields(sipTrunkId, fields) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateSIPInboundTrunkRequest({\n      sipTrunkId,\n      action: {\n        case: \"update\",\n        value: fields\n      }\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateSIPInboundTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPInboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Updates an existing SIP outbound trunk by replacing it entirely.\n   *\n   * @param sipTrunkId - ID of the SIP outbound trunk to update\n   * @param trunk - SIP outbound trunk to update with\n   * @returns Updated SIP outbound trunk\n   */\n  async updateSipOutboundTrunk(sipTrunkId, trunk) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateSIPOutboundTrunkRequest({\n      sipTrunkId,\n      action: {\n        case: \"replace\",\n        value: trunk\n      }\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateSIPOutboundTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPOutboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Updates specific fields of an existing SIP outbound trunk.\n   * Only provided fields will be updated.\n   *\n   * @param sipTrunkId - ID of the SIP outbound trunk to update\n   * @param fields - Fields of the outbound trunk to update\n   * @returns Updated SIP outbound trunk\n   */\n  async updateSipOutboundTrunkFields(sipTrunkId, fields) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateSIPOutboundTrunkRequest({\n      sipTrunkId,\n      action: {\n        case: \"update\",\n        value: fields\n      }\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"UpdateSIPOutboundTrunk\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPOutboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * List SIP dispatch rules with optional filtering.\n   *\n   * @param list - Request with optional filtering parameters\n   * @returns Response containing list of SIP dispatch rules\n   */\n  async listSipDispatchRule(list = {}) {\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPDispatchRuleRequest(list).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"ListSIPDispatchRule\",\n      req,\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPDispatchRuleResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n  /**\n   * Delete a SIP dispatch rule.\n   *\n   * @param sipDispatchRuleId - ID of the SIP dispatch rule to delete\n   * @returns Deleted rule information\n   */\n  async deleteSipDispatchRule(sipDispatchRuleId) {\n    const data = await this.rpc.request(\n      svc,\n      \"DeleteSIPDispatchRule\",\n      new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteSIPDispatchRuleRequest({ sipDispatchRuleId }).toJson(),\n      await this.authHeader({}, { admin: true })\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Create a new SIP participant.\n   *\n   * @param sipTrunkId - sip trunk to use for the call\n   * @param number - number to dial\n   * @param roomName - room to attach the call to\n   * @param opts - CreateSipParticipantOptions\n   * @returns Created SIP participant\n   */\n  async createSipParticipant(sipTrunkId, number, roomName, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    if (opts.timeout === void 0) {\n      opts.timeout = opts.waitUntilAnswered ? 60 : 10;\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPParticipantRequest({\n      sipTrunkId,\n      sipCallTo: number,\n      sipNumber: opts.fromNumber,\n      roomName,\n      participantIdentity: opts.participantIdentity || \"sip-participant\",\n      participantName: opts.participantName,\n      participantMetadata: opts.participantMetadata,\n      participantAttributes: opts.participantAttributes,\n      dtmf: opts.dtmf,\n      playDialtone: opts.playDialtone ?? opts.playRingtone,\n      headers: opts.headers,\n      hidePhoneNumber: opts.hidePhoneNumber,\n      includeHeaders: opts.includeHeaders,\n      ringingTimeout: opts.ringingTimeout ? new _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.Duration({ seconds: BigInt(opts.ringingTimeout) }) : void 0,\n      maxCallDuration: opts.maxCallDuration ? new _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.Duration({ seconds: BigInt(opts.maxCallDuration) }) : void 0,\n      krispEnabled: opts.krispEnabled,\n      waitUntilAnswered: opts.waitUntilAnswered\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      \"CreateSIPParticipant\",\n      req,\n      await this.authHeader({}, { call: true }),\n      opts.timeout\n    );\n    return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n  /**\n   * Transfer a SIP participant to a different room.\n   *\n   * @param roomName - room the SIP participant to transfer is connectd to\n   * @param participantIdentity - identity of the SIP participant to transfer\n   * @param transferTo - SIP URL to transfer the participant to\n   * @param opts - TransferSipParticipantOptions\n   */\n  async transferSipParticipant(roomName, participantIdentity, transferTo, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TransferSIPParticipantRequest({\n      participantIdentity,\n      roomName,\n      transferTo,\n      playDialtone: opts.playDialtone,\n      headers: opts.headers\n    }).toJson();\n    await this.rpc.request(\n      svc,\n      \"TransferSIPParticipant\",\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName }, { call: true })\n    );\n  }\n}\n\n//# sourceMappingURL=SipClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/SipClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js":
/*!**********************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/TwirpRPC.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwirpError: () => (/* binding */ TwirpError),\n/* harmony export */   TwirpRpc: () => (/* binding */ TwirpRpc),\n/* harmony export */   livekitPackage: () => (/* binding */ livekitPackage)\n/* harmony export */ });\nconst defaultPrefix = \"/twirp\";\nconst livekitPackage = \"livekit\";\nclass TwirpError extends Error {\n  constructor(name, message, status, code, metadata) {\n    super(message);\n    this.name = name;\n    this.status = status;\n    this.code = code;\n    this.metadata = metadata;\n  }\n}\nclass TwirpRpc {\n  constructor(host, pkg, prefix) {\n    if (host.startsWith(\"ws\")) {\n      host = host.replace(\"ws\", \"http\");\n    }\n    this.host = host;\n    this.pkg = pkg;\n    this.prefix = prefix || defaultPrefix;\n  }\n  async request(service, method, data, headers, timeout = 60) {\n    const path = `${this.prefix}/${this.pkg}.${service}/${method}`;\n    const url = new URL(path, this.host);\n    const init = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        ...headers\n      },\n      body: JSON.stringify(data)\n    };\n    if (timeout) {\n      init.signal = AbortSignal.timeout(timeout * 1e3);\n    }\n    const response = await fetch(url, init);\n    if (!response.ok) {\n      const isJson = response.headers.get(\"content-type\") === \"application/json\";\n      let errorMessage = \"Unknown internal error\";\n      let errorCode = void 0;\n      let metadata = void 0;\n      try {\n        if (isJson) {\n          const parsedError = await response.json();\n          if (\"msg\" in parsedError) {\n            errorMessage = parsedError.msg;\n          }\n          if (\"code\" in parsedError) {\n            errorCode = parsedError.code;\n          }\n          if (\"meta\" in parsedError) {\n            metadata = parsedError.meta;\n          }\n        } else {\n          errorMessage = await response.text();\n        }\n      } catch (e) {\n        console.debug(`Error when trying to parse error message, using defaults`, e);\n      }\n      throw new TwirpError(response.statusText, errorMessage, response.status, errorCode, metadata);\n    }\n    const parsedResp = await response.json();\n    const camelcaseKeys = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/quick-lru\"), __webpack_require__.e(\"vendor-chunks/map-obj\"), __webpack_require__.e(\"vendor-chunks/camelcase\"), __webpack_require__.e(\"vendor-chunks/camelcase-keys\")]).then(__webpack_require__.bind(__webpack_require__, /*! camelcase-keys */ \"(rsc)/./node_modules/camelcase-keys/index.js\")).then((mod) => mod.default);\n    return camelcaseKeys(parsedResp, { deep: true });\n  }\n}\n\n//# sourceMappingURL=TwirpRPC.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvVHdpcnBSUEMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVksR0FBRyxTQUFTLEdBQUcsUUFBUSxHQUFHLE9BQU87QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsaVdBQXdCO0FBQ3hELHVDQUF1QyxZQUFZO0FBQ25EO0FBQ0E7QUFLRTtBQUNGIiwic291cmNlcyI6WyJDOlxcdmFwaVxcbm9kZV9tb2R1bGVzXFxsaXZla2l0LXNlcnZlci1zZGtcXGRpc3RcXFR3aXJwUlBDLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRlZmF1bHRQcmVmaXggPSBcIi90d2lycFwiO1xuY29uc3QgbGl2ZWtpdFBhY2thZ2UgPSBcImxpdmVraXRcIjtcbmNsYXNzIFR3aXJwRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG5hbWUsIG1lc3NhZ2UsIHN0YXR1cywgY29kZSwgbWV0YWRhdGEpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgdGhpcy5tZXRhZGF0YSA9IG1ldGFkYXRhO1xuICB9XG59XG5jbGFzcyBUd2lycFJwYyB7XG4gIGNvbnN0cnVjdG9yKGhvc3QsIHBrZywgcHJlZml4KSB7XG4gICAgaWYgKGhvc3Quc3RhcnRzV2l0aChcIndzXCIpKSB7XG4gICAgICBob3N0ID0gaG9zdC5yZXBsYWNlKFwid3NcIiwgXCJodHRwXCIpO1xuICAgIH1cbiAgICB0aGlzLmhvc3QgPSBob3N0O1xuICAgIHRoaXMucGtnID0gcGtnO1xuICAgIHRoaXMucHJlZml4ID0gcHJlZml4IHx8IGRlZmF1bHRQcmVmaXg7XG4gIH1cbiAgYXN5bmMgcmVxdWVzdChzZXJ2aWNlLCBtZXRob2QsIGRhdGEsIGhlYWRlcnMsIHRpbWVvdXQgPSA2MCkge1xuICAgIGNvbnN0IHBhdGggPSBgJHt0aGlzLnByZWZpeH0vJHt0aGlzLnBrZ30uJHtzZXJ2aWNlfS8ke21ldGhvZH1gO1xuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocGF0aCwgdGhpcy5ob3N0KTtcbiAgICBjb25zdCBpbml0ID0ge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLThcIixcbiAgICAgICAgLi4uaGVhZGVyc1xuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpXG4gICAgfTtcbiAgICBpZiAodGltZW91dCkge1xuICAgICAgaW5pdC5zaWduYWwgPSBBYm9ydFNpZ25hbC50aW1lb3V0KHRpbWVvdXQgKiAxZTMpO1xuICAgIH1cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwgaW5pdCk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgY29uc3QgaXNKc29uID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoXCJjb250ZW50LXR5cGVcIikgPT09IFwiYXBwbGljYXRpb24vanNvblwiO1xuICAgICAgbGV0IGVycm9yTWVzc2FnZSA9IFwiVW5rbm93biBpbnRlcm5hbCBlcnJvclwiO1xuICAgICAgbGV0IGVycm9yQ29kZSA9IHZvaWQgMDtcbiAgICAgIGxldCBtZXRhZGF0YSA9IHZvaWQgMDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmIChpc0pzb24pIHtcbiAgICAgICAgICBjb25zdCBwYXJzZWRFcnJvciA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICBpZiAoXCJtc2dcIiBpbiBwYXJzZWRFcnJvcikge1xuICAgICAgICAgICAgZXJyb3JNZXNzYWdlID0gcGFyc2VkRXJyb3IubXNnO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoXCJjb2RlXCIgaW4gcGFyc2VkRXJyb3IpIHtcbiAgICAgICAgICAgIGVycm9yQ29kZSA9IHBhcnNlZEVycm9yLmNvZGU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChcIm1ldGFcIiBpbiBwYXJzZWRFcnJvcikge1xuICAgICAgICAgICAgbWV0YWRhdGEgPSBwYXJzZWRFcnJvci5tZXRhO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBlcnJvck1lc3NhZ2UgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5kZWJ1ZyhgRXJyb3Igd2hlbiB0cnlpbmcgdG8gcGFyc2UgZXJyb3IgbWVzc2FnZSwgdXNpbmcgZGVmYXVsdHNgLCBlKTtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBUd2lycEVycm9yKHJlc3BvbnNlLnN0YXR1c1RleHQsIGVycm9yTWVzc2FnZSwgcmVzcG9uc2Uuc3RhdHVzLCBlcnJvckNvZGUsIG1ldGFkYXRhKTtcbiAgICB9XG4gICAgY29uc3QgcGFyc2VkUmVzcCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBjb25zdCBjYW1lbGNhc2VLZXlzID0gYXdhaXQgaW1wb3J0KFwiY2FtZWxjYXNlLWtleXNcIikudGhlbigobW9kKSA9PiBtb2QuZGVmYXVsdCk7XG4gICAgcmV0dXJuIGNhbWVsY2FzZUtleXMocGFyc2VkUmVzcCwgeyBkZWVwOiB0cnVlIH0pO1xuICB9XG59XG5leHBvcnQge1xuICBUd2lycEVycm9yLFxuICBUd2lycFJwYyxcbiAgbGl2ZWtpdFBhY2thZ2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ud2lycFJQQy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/TwirpRPC.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/WebhookReceiver.js":
/*!*****************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/WebhookReceiver.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebhookEvent: () => (/* binding */ WebhookEvent),\n/* harmony export */   WebhookReceiver: () => (/* binding */ WebhookReceiver),\n/* harmony export */   authorizeHeader: () => (/* binding */ authorizeHeader)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\");\n/* harmony import */ var _crypto_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./crypto/digest.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/crypto/digest.js\");\n\n\n\nconst authorizeHeader = \"Authorize\";\nclass WebhookEvent extends _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebhookEvent {\n  constructor() {\n    super(...arguments);\n    this.event = \"\";\n  }\n  static fromBinary(bytes, options) {\n    return new WebhookEvent().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new WebhookEvent().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new WebhookEvent().fromJsonString(jsonString, options);\n  }\n}\nclass WebhookReceiver {\n  constructor(apiKey, apiSecret) {\n    this.verifier = new _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.TokenVerifier(apiKey, apiSecret);\n  }\n  /**\n   * @param body - string of the posted body\n   * @param authHeader - `Authorization` header from the request\n   * @param skipAuth - true to skip auth validation\n   * @param clockTolerance - How much tolerance to allow for checks against the auth header to be skewed from the claims\n   * @returns The processed webhook event\n   */\n  async receive(body, authHeader, skipAuth = false, clockTolerance) {\n    if (!skipAuth) {\n      if (!authHeader) {\n        throw new Error(\"authorization header is empty\");\n      }\n      const claims = await this.verifier.verify(authHeader, clockTolerance);\n      const hash = await (0,_crypto_digest_js__WEBPACK_IMPORTED_MODULE_2__.digest)(body);\n      const hashDecoded = btoa(\n        Array.from(new Uint8Array(hash)).map((v) => String.fromCharCode(v)).join(\"\")\n      );\n      if (claims.sha256 !== hashDecoded) {\n        throw new Error(\"sha256 checksum of body does not match\");\n      }\n    }\n    return WebhookEvent.fromJson(JSON.parse(body), { ignoreUnknownFields: true });\n  }\n}\n\n//# sourceMappingURL=WebhookReceiver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvV2ViaG9va1JlY2VpdmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRTtBQUNyQjtBQUNMO0FBQzVDO0FBQ0EsMkJBQTJCLDJEQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwREFBYTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHlEQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELDJCQUEyQjtBQUNoRjtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXHZhcGlcXG5vZGVfbW9kdWxlc1xcbGl2ZWtpdC1zZXJ2ZXItc2RrXFxkaXN0XFxXZWJob29rUmVjZWl2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2ViaG9va0V2ZW50IGFzIFByb3RvV2ViaG9va0V2ZW50IH0gZnJvbSBcIkBsaXZla2l0L3Byb3RvY29sXCI7XG5pbXBvcnQgeyBUb2tlblZlcmlmaWVyIH0gZnJvbSBcIi4vQWNjZXNzVG9rZW4uanNcIjtcbmltcG9ydCB7IGRpZ2VzdCB9IGZyb20gXCIuL2NyeXB0by9kaWdlc3QuanNcIjtcbmNvbnN0IGF1dGhvcml6ZUhlYWRlciA9IFwiQXV0aG9yaXplXCI7XG5jbGFzcyBXZWJob29rRXZlbnQgZXh0ZW5kcyBQcm90b1dlYmhvb2tFdmVudCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgdGhpcy5ldmVudCA9IFwiXCI7XG4gIH1cbiAgc3RhdGljIGZyb21CaW5hcnkoYnl0ZXMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFdlYmhvb2tFdmVudCgpLmZyb21CaW5hcnkoYnl0ZXMsIG9wdGlvbnMpO1xuICB9XG4gIHN0YXRpYyBmcm9tSnNvbihqc29uVmFsdWUsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFdlYmhvb2tFdmVudCgpLmZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucyk7XG4gIH1cbiAgc3RhdGljIGZyb21Kc29uU3RyaW5nKGpzb25TdHJpbmcsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFdlYmhvb2tFdmVudCgpLmZyb21Kc29uU3RyaW5nKGpzb25TdHJpbmcsIG9wdGlvbnMpO1xuICB9XG59XG5jbGFzcyBXZWJob29rUmVjZWl2ZXIge1xuICBjb25zdHJ1Y3RvcihhcGlLZXksIGFwaVNlY3JldCkge1xuICAgIHRoaXMudmVyaWZpZXIgPSBuZXcgVG9rZW5WZXJpZmllcihhcGlLZXksIGFwaVNlY3JldCk7XG4gIH1cbiAgLyoqXG4gICAqIEBwYXJhbSBib2R5IC0gc3RyaW5nIG9mIHRoZSBwb3N0ZWQgYm9keVxuICAgKiBAcGFyYW0gYXV0aEhlYWRlciAtIGBBdXRob3JpemF0aW9uYCBoZWFkZXIgZnJvbSB0aGUgcmVxdWVzdFxuICAgKiBAcGFyYW0gc2tpcEF1dGggLSB0cnVlIHRvIHNraXAgYXV0aCB2YWxpZGF0aW9uXG4gICAqIEBwYXJhbSBjbG9ja1RvbGVyYW5jZSAtIEhvdyBtdWNoIHRvbGVyYW5jZSB0byBhbGxvdyBmb3IgY2hlY2tzIGFnYWluc3QgdGhlIGF1dGggaGVhZGVyIHRvIGJlIHNrZXdlZCBmcm9tIHRoZSBjbGFpbXNcbiAgICogQHJldHVybnMgVGhlIHByb2Nlc3NlZCB3ZWJob29rIGV2ZW50XG4gICAqL1xuICBhc3luYyByZWNlaXZlKGJvZHksIGF1dGhIZWFkZXIsIHNraXBBdXRoID0gZmFsc2UsIGNsb2NrVG9sZXJhbmNlKSB7XG4gICAgaWYgKCFza2lwQXV0aCkge1xuICAgICAgaWYgKCFhdXRoSGVhZGVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImF1dGhvcml6YXRpb24gaGVhZGVyIGlzIGVtcHR5XCIpO1xuICAgICAgfVxuICAgICAgY29uc3QgY2xhaW1zID0gYXdhaXQgdGhpcy52ZXJpZmllci52ZXJpZnkoYXV0aEhlYWRlciwgY2xvY2tUb2xlcmFuY2UpO1xuICAgICAgY29uc3QgaGFzaCA9IGF3YWl0IGRpZ2VzdChib2R5KTtcbiAgICAgIGNvbnN0IGhhc2hEZWNvZGVkID0gYnRvYShcbiAgICAgICAgQXJyYXkuZnJvbShuZXcgVWludDhBcnJheShoYXNoKSkubWFwKCh2KSA9PiBTdHJpbmcuZnJvbUNoYXJDb2RlKHYpKS5qb2luKFwiXCIpXG4gICAgICApO1xuICAgICAgaWYgKGNsYWltcy5zaGEyNTYgIT09IGhhc2hEZWNvZGVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInNoYTI1NiBjaGVja3N1bSBvZiBib2R5IGRvZXMgbm90IG1hdGNoXCIpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gV2ViaG9va0V2ZW50LmZyb21Kc29uKEpTT04ucGFyc2UoYm9keSksIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgV2ViaG9va0V2ZW50LFxuICBXZWJob29rUmVjZWl2ZXIsXG4gIGF1dGhvcml6ZUhlYWRlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdlYmhvb2tSZWNlaXZlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/WebhookReceiver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/crypto/digest.js":
/*!***************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/crypto/digest.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digest: () => (/* binding */ digest)\n/* harmony export */ });\nasync function digest(data) {\n  var _a;\n  if ((_a = globalThis.crypto) == null ? void 0 : _a.subtle) {\n    const encoder = new TextEncoder();\n    return crypto.subtle.digest(\"SHA-256\", encoder.encode(data));\n  } else {\n    const nodeCrypto = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:crypto */ \"node:crypto\", 19));\n    return nodeCrypto.createHash(\"sha256\").update(data).digest();\n  }\n}\n\n//# sourceMappingURL=digest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvY3J5cHRvL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSiw2QkFBNkIsNEhBQXFCO0FBQ2xEO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFx2YXBpXFxub2RlX21vZHVsZXNcXGxpdmVraXQtc2VydmVyLXNka1xcZGlzdFxcY3J5cHRvXFxkaWdlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgZnVuY3Rpb24gZGlnZXN0KGRhdGEpIHtcbiAgdmFyIF9hO1xuICBpZiAoKF9hID0gZ2xvYmFsVGhpcy5jcnlwdG8pID09IG51bGwgPyB2b2lkIDAgOiBfYS5zdWJ0bGUpIHtcbiAgICBjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG4gICAgcmV0dXJuIGNyeXB0by5zdWJ0bGUuZGlnZXN0KFwiU0hBLTI1NlwiLCBlbmNvZGVyLmVuY29kZShkYXRhKSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3Qgbm9kZUNyeXB0byA9IGF3YWl0IGltcG9ydChcIm5vZGU6Y3J5cHRvXCIpO1xuICAgIHJldHVybiBub2RlQ3J5cHRvLmNyZWF0ZUhhc2goXCJzaGEyNTZcIikudXBkYXRlKGRhdGEpLmRpZ2VzdCgpO1xuICB9XG59XG5leHBvcnQge1xuICBkaWdlc3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaWdlc3QuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/crypto/digest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/crypto/uuid.js":
/*!*************************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/crypto/uuid.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomBytes: () => (/* binding */ getRandomBytes)\n/* harmony export */ });\nasync function getRandomBytes(size = 16) {\n  if (globalThis.crypto) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  } else {\n    const nodeCrypto = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! node:crypto */ \"node:crypto\", 19));\n    return nodeCrypto.getRandomValues(new Uint8Array(size));\n  }\n}\n\n//# sourceMappingURL=uuid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvY3J5cHRvL3V1aWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSiw2QkFBNkIsNEhBQXFCO0FBQ2xEO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFx2YXBpXFxub2RlX21vZHVsZXNcXGxpdmVraXQtc2VydmVyLXNka1xcZGlzdFxcY3J5cHRvXFx1dWlkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImFzeW5jIGZ1bmN0aW9uIGdldFJhbmRvbUJ5dGVzKHNpemUgPSAxNikge1xuICBpZiAoZ2xvYmFsVGhpcy5jcnlwdG8pIHtcbiAgICByZXR1cm4gY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheShzaXplKSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3Qgbm9kZUNyeXB0byA9IGF3YWl0IGltcG9ydChcIm5vZGU6Y3J5cHRvXCIpO1xuICAgIHJldHVybiBub2RlQ3J5cHRvLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheShzaXplKSk7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIGdldFJhbmRvbUJ5dGVzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXVpZC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/crypto/uuid.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/grants.js":
/*!********************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/grants.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   claimsToJwtPayload: () => (/* binding */ claimsToJwtPayload),\n/* harmony export */   trackSourceToString: () => (/* binding */ trackSourceToString)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/dist/index.mjs\");\n\nfunction trackSourceToString(source) {\n  switch (source) {\n    case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.CAMERA:\n      return \"camera\";\n    case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.MICROPHONE:\n      return \"microphone\";\n    case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.SCREEN_SHARE:\n      return \"screen_share\";\n    case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.SCREEN_SHARE_AUDIO:\n      return \"screen_share_audio\";\n    default:\n      throw new TypeError(`Cannot convert TrackSource ${source} to string`);\n  }\n}\nfunction claimsToJwtPayload(grant) {\n  var _a;\n  const claim = { ...grant };\n  if (Array.isArray((_a = claim.video) == null ? void 0 : _a.canPublishSources)) {\n    claim.video.canPublishSources = claim.video.canPublishSources.map(trackSourceToString);\n  }\n  return claim;\n}\n\n//# sourceMappingURL=grants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvZ3JhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRDtBQUNoRDtBQUNBO0FBQ0EsU0FBUywwREFBVztBQUNwQjtBQUNBLFNBQVMsMERBQVc7QUFDcEI7QUFDQSxTQUFTLDBEQUFXO0FBQ3BCO0FBQ0EsU0FBUywwREFBVztBQUNwQjtBQUNBO0FBQ0Esd0RBQXdELFFBQVE7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFx2YXBpXFxub2RlX21vZHVsZXNcXGxpdmVraXQtc2VydmVyLXNka1xcZGlzdFxcZ3JhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYWNrU291cmNlIH0gZnJvbSBcIkBsaXZla2l0L3Byb3RvY29sXCI7XG5mdW5jdGlvbiB0cmFja1NvdXJjZVRvU3RyaW5nKHNvdXJjZSkge1xuICBzd2l0Y2ggKHNvdXJjZSkge1xuICAgIGNhc2UgVHJhY2tTb3VyY2UuQ0FNRVJBOlxuICAgICAgcmV0dXJuIFwiY2FtZXJhXCI7XG4gICAgY2FzZSBUcmFja1NvdXJjZS5NSUNST1BIT05FOlxuICAgICAgcmV0dXJuIFwibWljcm9waG9uZVwiO1xuICAgIGNhc2UgVHJhY2tTb3VyY2UuU0NSRUVOX1NIQVJFOlxuICAgICAgcmV0dXJuIFwic2NyZWVuX3NoYXJlXCI7XG4gICAgY2FzZSBUcmFja1NvdXJjZS5TQ1JFRU5fU0hBUkVfQVVESU86XG4gICAgICByZXR1cm4gXCJzY3JlZW5fc2hhcmVfYXVkaW9cIjtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgQ2Fubm90IGNvbnZlcnQgVHJhY2tTb3VyY2UgJHtzb3VyY2V9IHRvIHN0cmluZ2ApO1xuICB9XG59XG5mdW5jdGlvbiBjbGFpbXNUb0p3dFBheWxvYWQoZ3JhbnQpIHtcbiAgdmFyIF9hO1xuICBjb25zdCBjbGFpbSA9IHsgLi4uZ3JhbnQgfTtcbiAgaWYgKEFycmF5LmlzQXJyYXkoKF9hID0gY2xhaW0udmlkZW8pID09IG51bGwgPyB2b2lkIDAgOiBfYS5jYW5QdWJsaXNoU291cmNlcykpIHtcbiAgICBjbGFpbS52aWRlby5jYW5QdWJsaXNoU291cmNlcyA9IGNsYWltLnZpZGVvLmNhblB1Ymxpc2hTb3VyY2VzLm1hcCh0cmFja1NvdXJjZVRvU3RyaW5nKTtcbiAgfVxuICByZXR1cm4gY2xhaW07XG59XG5leHBvcnQge1xuICBjbGFpbXNUb0p3dFBheWxvYWQsXG4gIHRyYWNrU291cmNlVG9TdHJpbmdcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncmFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/grants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/livekit-server-sdk/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/livekit-server-sdk/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* reexport safe */ _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.AccessToken),\n/* harmony export */   AgentDispatchClient: () => (/* reexport safe */ _AgentDispatchClient_js__WEBPACK_IMPORTED_MODULE_2__.AgentDispatchClient),\n/* harmony export */   AliOSSUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AliOSSUpload),\n/* harmony export */   AudioCodec: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AudioCodec),\n/* harmony export */   AutoParticipantEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AutoParticipantEgress),\n/* harmony export */   AutoTrackEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AutoTrackEgress),\n/* harmony export */   AzureBlobUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AzureBlobUpload),\n/* harmony export */   DataPacket_Kind: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DataPacket_Kind),\n/* harmony export */   DirectFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DirectFileOutput),\n/* harmony export */   EgressClient: () => (/* reexport safe */ _EgressClient_js__WEBPACK_IMPORTED_MODULE_3__.EgressClient),\n/* harmony export */   EgressInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo),\n/* harmony export */   EgressStatus: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressStatus),\n/* harmony export */   EncodedFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodedFileOutput),\n/* harmony export */   EncodedFileType: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodedFileType),\n/* harmony export */   EncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodingOptions),\n/* harmony export */   EncodingOptionsPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodingOptionsPreset),\n/* harmony export */   GCPUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.GCPUpload),\n/* harmony export */   ImageCodec: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ImageCodec),\n/* harmony export */   ImageFileSuffix: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ImageFileSuffix),\n/* harmony export */   ImageOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ImageOutput),\n/* harmony export */   IngressAudioEncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioEncodingOptions),\n/* harmony export */   IngressAudioEncodingPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioEncodingPreset),\n/* harmony export */   IngressAudioOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioOptions),\n/* harmony export */   IngressClient: () => (/* reexport safe */ _IngressClient_js__WEBPACK_IMPORTED_MODULE_5__.IngressClient),\n/* harmony export */   IngressInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo),\n/* harmony export */   IngressInput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInput),\n/* harmony export */   IngressState: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressState),\n/* harmony export */   IngressVideoEncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoEncodingOptions),\n/* harmony export */   IngressVideoEncodingPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoEncodingPreset),\n/* harmony export */   IngressVideoOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoOptions),\n/* harmony export */   ParticipantEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantEgressRequest),\n/* harmony export */   ParticipantInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo),\n/* harmony export */   ParticipantInfo_State: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo_State),\n/* harmony export */   ParticipantPermission: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantPermission),\n/* harmony export */   Room: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room),\n/* harmony export */   RoomCompositeEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomCompositeEgressRequest),\n/* harmony export */   RoomEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomEgress),\n/* harmony export */   RoomServiceClient: () => (/* reexport safe */ _RoomServiceClient_js__WEBPACK_IMPORTED_MODULE_6__.RoomServiceClient),\n/* harmony export */   S3Upload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.S3Upload),\n/* harmony export */   SIPDispatchRuleInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo),\n/* harmony export */   SIPParticipantInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPParticipantInfo),\n/* harmony export */   SIPTrunkInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo),\n/* harmony export */   SegmentedFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SegmentedFileOutput),\n/* harmony export */   SegmentedFileProtocol: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SegmentedFileProtocol),\n/* harmony export */   SipClient: () => (/* reexport safe */ _SipClient_js__WEBPACK_IMPORTED_MODULE_7__.SipClient),\n/* harmony export */   StreamOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StreamOutput),\n/* harmony export */   StreamProtocol: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StreamProtocol),\n/* harmony export */   TokenVerifier: () => (/* reexport safe */ _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.TokenVerifier),\n/* harmony export */   TrackCompositeEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackCompositeEgressRequest),\n/* harmony export */   TrackEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackEgressRequest),\n/* harmony export */   TrackInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackInfo),\n/* harmony export */   TrackSource: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource),\n/* harmony export */   TrackType: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackType),\n/* harmony export */   VideoCodec: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.VideoCodec),\n/* harmony export */   WebEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebEgressRequest),\n/* harmony export */   WebhookConfig: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebhookConfig),\n/* harmony export */   WebhookEvent: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_8__.WebhookEvent),\n/* harmony export */   WebhookReceiver: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_8__.WebhookReceiver),\n/* harmony export */   authorizeHeader: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_8__.authorizeHeader),\n/* harmony export */   claimsToJwtPayload: () => (/* reexport safe */ _grants_js__WEBPACK_IMPORTED_MODULE_4__.claimsToJwtPayload),\n/* harmony export */   trackSourceToString: () => (/* reexport safe */ _grants_js__WEBPACK_IMPORTED_MODULE_4__.trackSourceToString)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/@livekit/protocol/dist/index.mjs\");\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/AccessToken.js\");\n/* harmony import */ var _AgentDispatchClient_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AgentDispatchClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/AgentDispatchClient.js\");\n/* harmony import */ var _EgressClient_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EgressClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/EgressClient.js\");\n/* harmony import */ var _grants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./grants.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/grants.js\");\n/* harmony import */ var _IngressClient_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./IngressClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/IngressClient.js\");\n/* harmony import */ var _RoomServiceClient_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RoomServiceClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/RoomServiceClient.js\");\n/* harmony import */ var _SipClient_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SipClient.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/SipClient.js\");\n/* harmony import */ var _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./WebhookReceiver.js */ \"(rsc)/./node_modules/livekit-server-sdk/dist/WebhookReceiver.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtEMkI7QUFDTTtBQUNRO0FBQ1A7QUFDTjtBQUNPO0FBQ0k7QUFDUjtBQUNNO0FBbURuQztBQUNGIiwic291cmNlcyI6WyJDOlxcdmFwaVxcbm9kZV9tb2R1bGVzXFxsaXZla2l0LXNlcnZlci1zZGtcXGRpc3RcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFsaU9TU1VwbG9hZCxcbiAgQXVkaW9Db2RlYyxcbiAgQXV0b1BhcnRpY2lwYW50RWdyZXNzLFxuICBBdXRvVHJhY2tFZ3Jlc3MsXG4gIEF6dXJlQmxvYlVwbG9hZCxcbiAgRGF0YVBhY2tldF9LaW5kLFxuICBEaXJlY3RGaWxlT3V0cHV0LFxuICBFZ3Jlc3NJbmZvLFxuICBFZ3Jlc3NTdGF0dXMsXG4gIEVuY29kZWRGaWxlT3V0cHV0LFxuICBFbmNvZGVkRmlsZVR5cGUsXG4gIEVuY29kaW5nT3B0aW9ucyxcbiAgRW5jb2RpbmdPcHRpb25zUHJlc2V0LFxuICBHQ1BVcGxvYWQsXG4gIEltYWdlQ29kZWMsXG4gIEltYWdlRmlsZVN1ZmZpeCxcbiAgSW1hZ2VPdXRwdXQsXG4gIEluZ3Jlc3NBdWRpb0VuY29kaW5nT3B0aW9ucyxcbiAgSW5ncmVzc0F1ZGlvRW5jb2RpbmdQcmVzZXQsXG4gIEluZ3Jlc3NBdWRpb09wdGlvbnMsXG4gIEluZ3Jlc3NJbmZvLFxuICBJbmdyZXNzSW5wdXQsXG4gIEluZ3Jlc3NTdGF0ZSxcbiAgSW5ncmVzc1ZpZGVvRW5jb2RpbmdPcHRpb25zLFxuICBJbmdyZXNzVmlkZW9FbmNvZGluZ1ByZXNldCxcbiAgSW5ncmVzc1ZpZGVvT3B0aW9ucyxcbiAgUGFydGljaXBhbnRFZ3Jlc3NSZXF1ZXN0LFxuICBQYXJ0aWNpcGFudEluZm8sXG4gIFBhcnRpY2lwYW50SW5mb19TdGF0ZSxcbiAgUGFydGljaXBhbnRQZXJtaXNzaW9uLFxuICBSb29tLFxuICBSb29tQ29tcG9zaXRlRWdyZXNzUmVxdWVzdCxcbiAgUm9vbUVncmVzcyxcbiAgUzNVcGxvYWQsXG4gIFNJUERpc3BhdGNoUnVsZUluZm8sXG4gIFNJUFBhcnRpY2lwYW50SW5mbyxcbiAgU0lQVHJ1bmtJbmZvLFxuICBTZWdtZW50ZWRGaWxlT3V0cHV0LFxuICBTZWdtZW50ZWRGaWxlUHJvdG9jb2wsXG4gIFN0cmVhbU91dHB1dCxcbiAgU3RyZWFtUHJvdG9jb2wsXG4gIFRyYWNrQ29tcG9zaXRlRWdyZXNzUmVxdWVzdCxcbiAgVHJhY2tFZ3Jlc3NSZXF1ZXN0LFxuICBUcmFja0luZm8sXG4gIFRyYWNrU291cmNlLFxuICBUcmFja1R5cGUsXG4gIFdlYkVncmVzc1JlcXVlc3QsXG4gIFZpZGVvQ29kZWMsXG4gIFdlYmhvb2tDb25maWdcbn0gZnJvbSBcIkBsaXZla2l0L3Byb3RvY29sXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9BY2Nlc3NUb2tlbi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vQWdlbnREaXNwYXRjaENsaWVudC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vRWdyZXNzQ2xpZW50LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9ncmFudHMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0luZ3Jlc3NDbGllbnQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1Jvb21TZXJ2aWNlQ2xpZW50LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9TaXBDbGllbnQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1dlYmhvb2tSZWNlaXZlci5qc1wiO1xuZXhwb3J0IHtcbiAgQWxpT1NTVXBsb2FkLFxuICBBdWRpb0NvZGVjLFxuICBBdXRvUGFydGljaXBhbnRFZ3Jlc3MsXG4gIEF1dG9UcmFja0VncmVzcyxcbiAgQXp1cmVCbG9iVXBsb2FkLFxuICBEYXRhUGFja2V0X0tpbmQsXG4gIERpcmVjdEZpbGVPdXRwdXQsXG4gIEVncmVzc0luZm8sXG4gIEVncmVzc1N0YXR1cyxcbiAgRW5jb2RlZEZpbGVPdXRwdXQsXG4gIEVuY29kZWRGaWxlVHlwZSxcbiAgRW5jb2RpbmdPcHRpb25zLFxuICBFbmNvZGluZ09wdGlvbnNQcmVzZXQsXG4gIEdDUFVwbG9hZCxcbiAgSW1hZ2VDb2RlYyxcbiAgSW1hZ2VGaWxlU3VmZml4LFxuICBJbWFnZU91dHB1dCxcbiAgSW5ncmVzc0F1ZGlvRW5jb2RpbmdPcHRpb25zLFxuICBJbmdyZXNzQXVkaW9FbmNvZGluZ1ByZXNldCxcbiAgSW5ncmVzc0F1ZGlvT3B0aW9ucyxcbiAgSW5ncmVzc0luZm8sXG4gIEluZ3Jlc3NJbnB1dCxcbiAgSW5ncmVzc1N0YXRlLFxuICBJbmdyZXNzVmlkZW9FbmNvZGluZ09wdGlvbnMsXG4gIEluZ3Jlc3NWaWRlb0VuY29kaW5nUHJlc2V0LFxuICBJbmdyZXNzVmlkZW9PcHRpb25zLFxuICBQYXJ0aWNpcGFudEVncmVzc1JlcXVlc3QsXG4gIFBhcnRpY2lwYW50SW5mbyxcbiAgUGFydGljaXBhbnRJbmZvX1N0YXRlLFxuICBQYXJ0aWNpcGFudFBlcm1pc3Npb24sXG4gIFJvb20sXG4gIFJvb21Db21wb3NpdGVFZ3Jlc3NSZXF1ZXN0LFxuICBSb29tRWdyZXNzLFxuICBTM1VwbG9hZCxcbiAgU0lQRGlzcGF0Y2hSdWxlSW5mbyxcbiAgU0lQUGFydGljaXBhbnRJbmZvLFxuICBTSVBUcnVua0luZm8sXG4gIFNlZ21lbnRlZEZpbGVPdXRwdXQsXG4gIFNlZ21lbnRlZEZpbGVQcm90b2NvbCxcbiAgU3RyZWFtT3V0cHV0LFxuICBTdHJlYW1Qcm90b2NvbCxcbiAgVHJhY2tDb21wb3NpdGVFZ3Jlc3NSZXF1ZXN0LFxuICBUcmFja0VncmVzc1JlcXVlc3QsXG4gIFRyYWNrSW5mbyxcbiAgVHJhY2tTb3VyY2UsXG4gIFRyYWNrVHlwZSxcbiAgVmlkZW9Db2RlYyxcbiAgV2ViRWdyZXNzUmVxdWVzdCxcbiAgV2ViaG9va0NvbmZpZ1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/livekit-server-sdk/dist/index.js\n");

/***/ })

};
;